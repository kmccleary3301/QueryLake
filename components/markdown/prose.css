.prose :where([class~=lead]):not(:where([class~=not-prose] *)) {
  color:var(--tw-prose-lead);
  font-size:1.25em;
  line-height:1.6;
  margin-bottom:1.2em;
  margin-top:1.2em
}
.prose :where(a):not(:where([class~=not-prose] *)) {
  color:var(--tw-prose-links);
  font-weight:500;
  text-decoration:underline
}.prose
.prose :where(strong):not(:where([class~=not-prose] *)) {
  color:var(--tw-prose-bold);
  font-weight:600
}
.prose :where(a strong):not(:where([class~=not-prose] *)) {
  color:inherit
}
.prose :where(blockquote strong):not(:where([class~=not-prose] *)) {
  color:inherit
}
.prose :where(thead th strong):not(:where([class~=not-prose] *)) {
  color:inherit
}
.prose :where(ol):not(:where([class~=not-prose] *)) {
  list-style-type:decimal;
  margin-bottom:1.25em;
  /* margin-top:1em; */
  padding-left:1.625em
}
.prose :where(ol[type=A]):not(:where([class~=not-prose] *)) {
  list-style-type:upper-alpha
}
.prose :where(ol[type=a]):not(:where([class~=not-prose] *)) {
  list-style-type:lower-alpha
}
.prose :where(ol[type=A s]):not(:where([class~=not-prose] *)) {
  list-style-type:upper-alpha
}
.prose :where(ol[type=a s]):not(:where([class~=not-prose] *)) {
  list-style-type:lower-alpha
}
.prose :where(ol[type=I]):not(:where([class~=not-prose] *)) {
  list-style-type:upper-roman
}
.prose :where(ol[type=i]):not(:where([class~=not-prose] *)) {
  list-style-type:lower-roman
}
.prose :where(ol[type=I s]):not(:where([class~=not-prose] *)) {
  list-style-type:upper-roman
}
.prose :where(ol[type=i s]):not(:where([class~=not-prose] *)) {
  list-style-type:lower-roman
}
.prose :where(ol[type="1"]):not(:where([class~=not-prose] *)) {
  list-style-type:decimal
}
.prose :where(ul):not(:where([class~=not-prose] *)) {
  list-style-type:disc;
  margin-bottom:1.25em;
  margin-top:1.25em;
  padding-left:1.625em
}
.prose :where(ol>li):not(:where([class~=not-prose] *))::marker {
  color:var(primary)/80;
  font-weight:400;
  opacity: 0.5;
}
.prose :where(ul>li):not(:where([class~=not-prose] *))::marker {
  /* color:var(--tw-prose-bullets) */
}
.prose :where(hr):not(:where([class~=not-prose] *)) {
  border-color:var(--tw-prose-hr);
  border-top-width:1px;
  margin-bottom:3em;
  margin-top:3em
}
.prose :where(blockquote):not(:where([class~=not-prose] *)) {
  border-left-color:var(--tw-prose-quote-borders);
  border-left-width:.25rem;
  color:var(--tw-prose-quotes);
  font-style:italic;
  font-style:normal;
  font-weight:500;
  margin-bottom:1.6em;
  margin-top:1.6em;
  padding-left:1em;
  quotes:"\201C""\201D""\2018""\2019"
}
.prose :where(blockquote p:first-of-type):not(:where([class~=not-prose] *)):before {
  content:open-quote
}
.prose :where(blockquote p:last-of-type):not(:where([class~=not-prose] *)):after {
  content:close-quote
}
.prose :where(h1):not(:where([class~=not-prose] *)) {
  color:var(--tw-prose-headings);
  font-size:2.25em;
  font-weight:800;
  line-height:1.1111111;
  margin-bottom:.8888889em;
  margin-top:.8888889em
}
.prose :where(h1 strong):not(:where([class~=not-prose] *)) {
  color:inherit;
  font-weight:900
}
.prose :where(h2):not(:where([class~=not-prose] *)) {
  color:var(--tw-prose-headings);
  font-size:1.5em;
  font-weight:700;
  line-height:1.3333333;
  margin-bottom:1em;
  margin-top:1em
}
.prose :where(h2 strong):not(:where([class~=not-prose] *)) {
  color:inherit;
  font-weight:800;
  margin-bottom:1em;
  margin-top:1em
}
.prose :where(h3):not(:where([class~=not-prose] *)) {
  color:var(--tw-prose-headings);
  font-size:1.25em;
  font-weight:600;
  line-height:1.6;
  margin-bottom:.6em;
  margin-top:.6em
}
.prose :where(h3 strong):not(:where([class~=not-prose] *)) {
  color:inherit;
  font-weight:700
}
.prose :where(h4):not(:where([class~=not-prose] *)) {
  color:var(--tw-prose-headings);
  font-weight:600;
  line-height:1.5;
  margin-bottom:.5em;
  margin-top:1.5em
}
.prose :where(h4 strong):not(:where([class~=not-prose] *)) {
  color:inherit;
  font-weight:700
}
.prose :where(img):not(:where([class~=not-prose] *)) {
  margin-bottom:2em;
  margin-top:2em
}
.prose :where(figure>*):not(:where([class~=not-prose] *)) {
  margin-bottom:0;
  margin-top:0
}
.prose :where(figcaption):not(:where([class~=not-prose] *)) {
  color:var(--tw-prose-captions);
  font-size:.875em;
  line-height:1.4285714;
  margin-top:.8571429em
}
/* .prose :where(code):not(:where([class~=not-prose] *)) {
  color:var(--tw-prose-code);
  font-size:.875em;
  font-weight:600
} */
/* .prose :where(code):not(:where([class~=not-prose] *)):before {
  content:"`"
} */
/* .prose :where(code):not(:where([class~=not-prose] *)):after {
  content:"`"
} */
.prose :where(a code):not(:where([class~=not-prose] *)) {
  color:inherit
}
.prose :where(h1 code):not(:where([class~=not-prose] *)) {
  color:inherit
}
.prose :where(h2 code):not(:where([class~=not-prose] *)) {
  color:inherit;
  font-size:.875em
}
.prose :where(h3 code):not(:where([class~=not-prose] *)) {
  color:inherit;
  font-size:.9em
}
.prose :where(h4 code):not(:where([class~=not-prose] *)) {
  color:inherit
}
.prose :where(blockquote code):not(:where([class~=not-prose] *)) {
  color:inherit
}
.prose :where(thead th code):not(:where([class~=not-prose] *)) {
  color:inherit
}
.prose :where(pre):not(:where([class~=not-prose] *)) {
  background-color:transparent;
  border-radius:.375rem;
  color:currentColor;
  /* font-size:.875em; */
  font-weight:400;
  line-height:1.7142857;
  margin:0;
  overflow-x:auto;
  padding:0
}
.prose :where(pre code):not(:where([class~=not-prose] *)) {
  background-color:transparent;
  border-radius:0;
  border-width:0;
  color:inherit;
  font-family:inherit;
  font-size:inherit;
  font-weight:inherit;
  line-height:inherit;
  padding:0
}
.prose :where(pre code):not(:where([class~=not-prose] *)):before {
  content:none
}
.prose :where(pre code):not(:where([class~=not-prose] *)):after {
  content:none
}
.prose :where(table):not(:where([class~=not-prose] *)) {
  font-size:.875em;
  line-height:1.7142857;
  margin-bottom:2em;
  margin-top:2em;
  table-layout:auto;
  text-align:left;
  width:100%
}
.prose :where(thead):not(:where([class~=not-prose] *)) {
  border-bottom-color:var(--tw-prose-th-borders);
  border-bottom-width:1px
}
.prose :where(thead th):not(:where([class~=not-prose] *)) {
  color:var(--tw-prose-headings);
  font-weight:600;
  padding-bottom:.5714286em;
  padding-left:.5714286em;
  padding-right:.5714286em;
  vertical-align:bottom
}
.prose :where(tbody tr):not(:where([class~=not-prose] *)) {
  border-bottom-color:var(--tw-prose-td-borders);
  border-bottom-width:1px
}
.prose :where(tbody tr:last-child):not(:where([class~=not-prose] *)) {
  border-bottom-width:0
}
.prose :where(tbody td):not(:where([class~=not-prose] *)) {
  vertical-align:baseline
}
.prose :where(tfoot):not(:where([class~=not-prose] *)) {
  border-top-color:var(--tw-prose-th-borders);
  border-top-width:1px
}
.prose :where(tfoot td):not(:where([class~=not-prose] *)) {
  vertical-align:top
}
.prose {
  --tw-prose-body:var(--text-primary);
  --tw-prose-headings:var(--text-primary);
  --tw-prose-lead:var(--text-primary);
  --tw-prose-links:var(--text-primary);
  --tw-prose-bold:var(--text-primary);
  --tw-prose-counters:var(--text-tertiary);
  --tw-prose-bullets:var(--text-tertiary);
  --tw-prose-hr:var(--border-xheavy);
  --tw-prose-quotes:var(--text-primary);
  --tw-prose-quote-borders:#e5e7eb;
  --tw-prose-captions:var(--text-secondary);
  --tw-prose-code:var(--text-primary);
  --tw-prose-pre-code:#e5e7eb;
  --tw-prose-pre-bg:#1f2937;
  --tw-prose-th-borders:#d1d5db;
  --tw-prose-td-borders:#e5e7eb;
  --tw-prose-invert-body:var(--text-primary);
  --tw-prose-invert-headings:var(--text-primary);
  --tw-prose-invert-lead:var(--text-primary);
  --tw-prose-invert-links:var(--text-primary);
  --tw-prose-invert-bold:var(--text-primary);
  --tw-prose-invert-counters:var(--text-tertiary);
  --tw-prose-invert-bullets:var(--text-tertiary);
  --tw-prose-invert-hr:var(--border-xheavy);
  --tw-prose-invert-quotes:var(--text-primary);
  --tw-prose-invert-quote-borders:#374151;
  --tw-prose-invert-captions:var(--text-secondary);
  --tw-prose-invert-code:var(--text-primary);
  --tw-prose-invert-pre-code:#d1d5db;
  --tw-prose-invert-pre-bg:rgba(0,0,0,.5);
  --tw-prose-invert-th-borders:#4b5563;
  --tw-prose-invert-td-borders:#374151;
  font-size:1rem;
  /* line-height:1.5 */
}
.prose :where(p):not(:where([class~=not-prose] *)) {
  margin-bottom:1.25em;
  margin-top:1.25em
}
.prose :where(video):not(:where([class~=not-prose] *)) {
  margin-bottom:2em;
  margin-top:2em
}
.prose :where(figure):not(:where([class~=not-prose] *)) {
  margin-bottom:2em;
  margin-top:2em
}
.prose :where(li):not(:where([class~=not-prose] *)) {
  margin-bottom:.5em;
  margin-top:.5em
}
.prose :where(ol>li):not(:where([class~=not-prose] *)) {
  padding-left:.375em
}
.prose :where(ul>li):not(:where([class~=not-prose] *)) {
  padding-left:.375em
}
.prose :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
  margin-bottom:.75em;
  margin-top:.75em
}
.prose :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.25em
}

/* .prose :where(ul > li):not(:where([class~="not-prose"] *))::marker{
  color: var(--tw-prose-bullets);
} */

.prose :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.25em
}
.prose :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.25em
}
.prose :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.25em
}
.prose :where(ul ul,
ul ol,
ol ul,
ol ol):not(:where([class~=not-prose] *)) {
  margin-bottom:.75em;
  margin-top:.75em
}
.prose :where(hr+*):not(:where([class~=not-prose] *)) {
  margin-top:0
}
.prose :where(h2+*):not(:where([class~=not-prose] *)) {
  margin-top:0
}
.prose :where(h3+*):not(:where([class~=not-prose] *)) {
  margin-top:0
}
.prose :where(h4+*):not(:where([class~=not-prose] *)) {
  margin-top:0
}
.prose :where(thead th:first-child):not(:where([class~=not-prose] *)) {
  padding-left:0
}
.prose :where(thead th:last-child):not(:where([class~=not-prose] *)) {
  padding-right:0
}
.prose :where(tbody td,
tfoot td):not(:where([class~=not-prose] *)) {
  padding:.5714286em
}
.prose :where(tbody td:first-child,
tfoot td:first-child):not(:where([class~=not-prose] *)) {
  padding-left:0
}
.prose :where(tbody td:last-child,
tfoot td:last-child):not(:where([class~=not-prose] *)) {
  padding-right:0
}
.prose :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:0
}
.prose :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:0
}
.prose-sm :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
  margin-bottom:.5714286em;
  margin-top:.5714286em
}
.prose-sm :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.1428571em
}
.prose-sm :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.1428571em
}
.prose-sm :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.1428571em
}
.prose-sm :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.1428571em
}
.prose-sm :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:0
}
.prose-sm :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:0
}
.prose-base :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
  margin-bottom:.75em;
  margin-top:.75em
}
.prose-base :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.25em
}
.prose-base :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.25em
}
.prose-base :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.25em
}
.prose-base :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.25em
}
.prose-base :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:0
}
.prose-base :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:0
}
.prose-lg :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
  margin-bottom:.8888889em;
  margin-top:.8888889em
}
.prose-lg :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.3333333em
}
.prose-lg :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.3333333em
}
.prose-lg :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.3333333em
}
.prose-lg :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.3333333em
}
.prose-lg :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:0
}
.prose-lg :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:0
}
.prose-xl :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
  margin-bottom:.8em;
  margin-top:.8em
}
.prose-xl :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.2em
}
.prose-xl :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.2em
}
.prose-xl :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.2em
}
.prose-xl :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.2em
}
.prose-xl :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:0
}
.prose-xl :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:0
}
.prose-2xl :where(.prose>ul>li p):not(:where([class~=not-prose] *)) {
  margin-bottom:.8333333em;
  margin-top:.8333333em
}
.prose-2xl :where(.prose>ul>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.3333333em
}
.prose-2xl :where(.prose>ul>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.3333333em
}
.prose-2xl :where(.prose>ol>li>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:1.3333333em
}
.prose-2xl :where(.prose>ol>li>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:1.3333333em
}
.prose-2xl :where(.prose>:first-child):not(:where([class~=not-prose] *)) {
  margin-top:0
}
.prose-2xl :where(.prose>:last-child):not(:where([class~=not-prose] *)) {
  margin-bottom:0
}




.markdown {
    max-width: none;
    line-height: 1.5rem;
}

.markdown h1 {
    font-weight: 600
}

.markdown h1:first-child {
    margin-top: 0
}

.markdown h2 {
    font-weight: 600;
    margin-bottom: 1rem;
    margin-top: 2rem
}

.markdown h2:first-child {
    margin-top: 0
}

.markdown h3 {
    font-weight: 600;
    margin-bottom: .5rem;
    margin-top: 1rem
}

.markdown h3:first-child {
    margin-top: 0
}

.markdown h4 {
    font-weight: 400;
    margin-bottom: .5rem;
    margin-top: 1rem
}

.markdown h4:first-child {
    margin-top: 0
}

.markdown h5 {
    font-weight: 600
}

.markdown h5:first-child {
    margin-top: 0
}

.markdown blockquote {
    --tw-border-opacity: 1;
    border-color: rgba(155, 155, 155, var(--tw-border-opacity));
    border-left-width: 2px;
    line-height: 1.5rem;
    margin: 0;
    padding-bottom: .5rem;
    padding-left: 1rem;
    padding-top: .5rem
}

.markdown blockquote>p {
    margin: 0
}

.markdown blockquote>p:after,
.markdown blockquote>p:before {
    display: none
}

.markdown p {
    margin-bottom: 0rem;
    margin-top: 0;
}

.markdown ol {
    display: flex;
    flex-direction: column;
    padding-left: 0
}

.markdown blockquote {
    margin-top: 1rem;
    margin-bottom: 1rem;
}

/* .markdown ol:first-child>li {
    padding-left: 1.25rem
} */
.markdown ol>li:first-child {
    padding-top: 0rem;
}

.markdown ol {
    counter-reset: list-number;
    display: flex;
    flex-direction: column;
    list-style-type: none;
    padding-left: 0
}

.markdown ol>li {
    /* counter-increment: list-number; */
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    /* justify-content: start; */
    margin-bottom: 0.25rem;
    margin-top: 0.25rem;
    /* min-height: 1.75rem; */
    position: relative; /* Added to position the ::before pseudo-element relative to the li element */
    max-width: 100%;
    width: 100%;
}

.markdown ol>li:before {
    --tw-numeric-spacing: tabular-nums;
    /* height: 0; */
    opacity: 0.5;
    /* content: counters(list-number, ".") "."; */
    content: attr(counter-text) " ";
    font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
    padding-right: .5rem;
    position: absolute; /* Added to position the ::before pseudo-element */
    right: 100%; /* Added to push the ::before pseudo-element to the left */
    text-align: right; /* Added to justify the text of the ::before pseudo-element to the right */
    width: 2.5rem;
    /* border-width: 1px; */
}

.markdown ul {
    display: flex;
    flex-direction: column;
    padding-left: 0
}

/* .markdown ul:first-child>li {
    padding-left: 1.25rem
} */
.markdown ul>li:first-child {
    padding-top: 0.15rem;
}


.markdown ul>li:first-child:before {
    padding-top: 0.15rem;
}

/* .markdown ul>li {
    display: block;
    margin: 0;
    min-height: 28px
}

.markdown ul>li:before {
    --tw-translate-x: -100%;
    content: "\2022";
    font-size: .875rem;
    line-height: 1.25rem;
    padding-right: .5rem;
    position: absolute;
    -webkit-transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
} */

.markdown ul>li {
    counter-increment: list-number;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    /* justify-content: start; */
    margin-bottom: 0.125rem;
    margin-top: 0.125rem;
    /* min-height: 1.75rem; */
    position: relative; /* Added to position the ::before pseudo-element relative to the li element */
    max-width: 100%;
    width: 100%;
    
}

.markdown ul>li:before {
    --tw-numeric-spacing: tabular-nums;
    /* height: 0; */
    opacity: 0.5;
    content: "\2022";
    /* content: attr(counter-text) " "; */
    font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var (--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
    /* padding-right: .65rem; */
    font-size: 1.75rem;
    width: 1.5rem;
    height: 1.5rem;
    margin-top: -0.1rem;
    position: absolute; /* Keeps the ::before pseudo-element positioned absolutely */
    right: 100%; /* Pushes the ::before pseudo-element to the left */
    top: 0; /* Aligns the bullet to the top */
    display: flex; /* Added to center the bullet */
    align-items: flex-start; /* Aligns the bullet to the top */
    justify-content: center; /* Centers the bullet horizontally */
    /* border-width: 1px; */
}

.markdown ol>li>*,
.markdown ul>li>* {
  max-width: 100%;
  width: 100%;
}

/* Ensure ScrollArea components inside list items respect container width */
.markdown ol>li [data-radix-scroll-area-viewport],
.markdown ul>li [data-radix-scroll-area-viewport] {
  max-width: 100%;
  width: 100%;
}

.markdown ol li>p,
.markdown ul li>p {
    margin: 0
}

.markdown ol li>pre,
.markdown ul li>pre {
    margin-bottom: .5rem;
    margin-top: .25rem
}

.markdown ol ol,
.markdown ol ul,
.markdown ul ol,
.markdown ul ul {
    margin-bottom: 0;
    margin-left: 1rem;
    margin-top: 0
}

.markdown br {
    display: block;
    margin: 5px 0;
    line-height: 2.5rem;
}




/* .markdown table {
    --tw-border-spacing-x: 0px;
    --tw-border-spacing-y: 0px;
    border-collapse: separate;
    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
    margin-bottom: .25rem;
    margin-top: .25rem;
    width: 100%
}

.markdown th {
    background-color: hsla(0, 0%, 93%, .2);
    border-bottom-width: 1px;
    border-left-width: 1px;
    border-top-width: 1px;
    padding: .25rem .75rem
}

.markdown th:first-child {
    border-top-left-radius: .375rem
}

.markdown th:last-child {
    border-right-width: 1px;
    border-top-right-radius: .375rem
}

.markdown td {
    border-bottom-width: 1px;
    border-left-width: 1px;
    padding: .25rem .75rem
}

.markdown td:last-child {
    border-right-width: 1px
}

.markdown tbody tr:last-child td:first-child {
    border-bottom-left-radius: .375rem
}

.markdown tbody tr:last-child td:last-child {
    border-bottom-right-radius: .375rem
}

.markdown a {
    color: #2964aa;
    color: var(--link);
    font-weight: 400;
    text-decoration-line: none
}

.markdown a:hover {
    color: #749ac8;
    color: var(--link-hover)
} */
/* 
.gizmo .markdown>:not(pre),
.gizmo .markdown>:not(pre)>:not(a) {
    color: #0d0d0d;
    color: var(--text-primary)
} */