{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { ContinousBaseGesture } from \"./gesture\";\nvar _worklet_12120497563697_init_data = {\n  code: \"function changeEventCalculator(current, previous) {\\n  let changePayload;\\n  if (previous === undefined) {\\n    changePayload = {\\n      scaleChange: current.scale\\n    };\\n  } else {\\n    changePayload = {\\n      scaleChange: current.scale / previous.scale\\n    };\\n  }\\n  return {\\n    ...current,\\n    ...changePayload\\n  };\\n}\",\n  location: \"C:\\\\alt\\\\projects\\\\school\\\\3035\\\\QueryLake\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\pinchGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"scaleChange\\\",\\\"scale\\\"],\\\"sources\\\":[\\\"C:/alt/projects/school/3035/QueryLake/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/pinchGesture.js\\\"],\\\"mappings\\\":\\\"AAEA,SAAAA,qBAASA,CAAsBC,OAAA,EAAOC,QAAE,EAAQ;EAG9C,IAAIC,aAAa;EAEjB,IAAID,QAAQ,KAAKE,SAAS,EAAE;IAC1BD,aAAa,GAAG;MACdE,WAAW,EAAEJ,OAAO,CAACK;IACvB,CAAC;EACH,CAAC,MAAM;IACLH,aAAa,GAAG;MACdE,WAAW,EAAEJ,OAAO,CAACK,KAAK,GAAGJ,QAAQ,CAACI;IACxC,CAAC;EACH;EAEA,OAAO;IAAE,GAAGL,OAAO;IACjB,GAAGE;EACL,CAAC;AACH\\\"}\"\n};\nvar changeEventCalculator = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(current, previous) {\n    var changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        scaleChange: current.scale\n      };\n    } else {\n      changePayload = {\n        scaleChange: current.scale / previous.scale\n      };\n    }\n    return _objectSpread(_objectSpread({}, current), changePayload);\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_12120497563697_init_data;\n  _f.__workletHash = 12120497563697;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nexport var PinchGesture = function (_ContinousBaseGesture) {\n  _inherits(PinchGesture, _ContinousBaseGesture);\n  var _super = _createSuper(PinchGesture);\n  function PinchGesture() {\n    var _this;\n    _classCallCheck(this, PinchGesture);\n    _this = _super.call(this);\n    _this.handlerName = 'PinchGestureHandler';\n    return _this;\n  }\n  _createClass(PinchGesture, [{\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return _get(_getPrototypeOf(PinchGesture.prototype), \"onChange\", this).call(this, callback);\n    }\n  }]);\n  return PinchGesture;\n}(ContinousBaseGesture);","map":{"version":3,"names":["ContinousBaseGesture","_worklet_12120497563697_init_data","code","location","sourceMap","changeEventCalculator","_e","global","Error","_f","current","previous","changePayload","undefined","scaleChange","scale","_objectSpread","_closure","__initData","__workletHash","__stackDetails","__version","PinchGesture","_ContinousBaseGesture","_inherits","_super","_createSuper","_this","_classCallCheck","call","handlerName","_createClass","key","value","onChange","callback","handlers","_get","_getPrototypeOf","prototype"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\pinchGesture.ts"],"sourcesContent":["import { ContinousBaseGesture } from './gesture';\nimport { PinchGestureHandlerEventPayload } from '../PinchGestureHandler';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\n\nexport type PinchGestureChangeEventPayload = {\n  scaleChange: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<PinchGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<PinchGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: PinchGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      scaleChange: current.scale,\n    };\n  } else {\n    changePayload = {\n      scaleChange: current.scale / previous.scale,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class PinchGesture extends ContinousBaseGesture<\n  PinchGestureHandlerEventPayload,\n  PinchGestureChangeEventPayload\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'PinchGestureHandler';\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        PinchGestureHandlerEventPayload & PinchGestureChangeEventPayload\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, PinchGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type PinchGestureType = InstanceType<typeof PinchGesture>;\n"],"mappings":";;;;;;;;;;;AAAA,SAASA,oBAAT;AAAA,IAAAC,iCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAAA,IAQSC,qBAAT;EAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAC,EAAA,YAAAA,GACEC,OADF,EAEEC,QAFF,EAGE;IAEA,IAAIC,aAAJ;IACA,IAAID,QAAQ,KAAKE,SAAjB,EAA4B;MAC1BD,aAAa,GAAG;QACdE,WAAW,EAAEJ,OAAO,CAACK;MADP,CAAhB;IAGD,CAJD,MAIO;MACLH,aAAa,GAAG;QACdE,WAAW,EAAEJ,OAAO,CAACK,KAAR,GAAgBJ,QAAQ,CAACI;MADxB,CAAhB;IAGD;IAED,OAAAC,aAAA,CAAAA,aAAA,KAAYN,OAAL,GAAiBE,aAAA;EACzB;EAAAH,EAAA,CAAAQ,QAAA;EAAAR,EAAA,CAAAS,UAAA,GAAAjB,iCAAA;EAAAQ,EAAA,CAAAU,aAAA;EAAAV,EAAA,CAAAW,cAAA,GAAAd,EAAA;EAAAG,EAAA,CAAAY,SAAA;EAAA,OAAAZ,EAAA;AAAA;AAED,WAAaa,YAAN,aAAAC,qBAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EAIL,SAAAA,aAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,YAAA;IACZK,KAAA,GAAAF,MAAA,CAAAI,IAAA;IAEAF,KAAA,CAAKG,WAAL,GAAmB,qBAAnB;IAAA,OAAAH,KAAA;EACD;EAAAI,YAAA,CAAAT,YAAA;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAC,SACEC,QADM,EAMN;MAEA,KAAKC,QAAL,CAAc/B,qBAAd,GAAsCA,qBAAtC;MACA,OAAAgC,IAAA,CAAAC,eAAA,CAAAhB,YAAA,CAAAiB,SAAA,qBAAAV,IAAA,OAAsBM,QAAf;IACR;EAAA;EAAA,OAAAb,YAAA;AAAA,EApB+BtB,oBAA3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}