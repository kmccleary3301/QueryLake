{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { BaseGesture, Gesture } from \"./gesture\";\nfunction extendRelation(currentRelation, extendWith) {\n  if (currentRelation === undefined) {\n    return _toConsumableArray(extendWith);\n  } else {\n    return [].concat(_toConsumableArray(currentRelation), _toConsumableArray(extendWith));\n  }\n}\nexport var ComposedGesture = function (_Gesture) {\n  _inherits(ComposedGesture, _Gesture);\n  var _super = _createSuper(ComposedGesture);\n  function ComposedGesture() {\n    var _this;\n    _classCallCheck(this, ComposedGesture);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"gestures\", []);\n    _defineProperty(_assertThisInitialized(_this), \"simultaneousGestures\", []);\n    _defineProperty(_assertThisInitialized(_this), \"requireGesturesToFail\", []);\n    for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n      gestures[_key] = arguments[_key];\n    }\n    _this.gestures = gestures;\n    return _this;\n  }\n  _createClass(ComposedGesture, [{\n    key: \"prepareSingleGesture\",\n    value: function prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof BaseGesture) {\n        var newConfig = _objectSpread({}, gesture.config);\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare() {\n      for (var gesture of this.gestures) {\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      for (var gesture of this.gestures) {\n        gesture.initialize();\n      }\n    }\n  }, {\n    key: \"toGestureArray\",\n    value: function toGestureArray() {\n      return this.gestures.flatMap(function (gesture) {\n        return gesture.toGestureArray();\n      });\n    }\n  }]);\n  return ComposedGesture;\n}(Gesture);\nexport var SimultaneousGesture = function (_ComposedGesture) {\n  _inherits(SimultaneousGesture, _ComposedGesture);\n  var _super2 = _createSuper(SimultaneousGesture);\n  function SimultaneousGesture() {\n    _classCallCheck(this, SimultaneousGesture);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(SimultaneousGesture, [{\n    key: \"prepare\",\n    value: function prepare() {\n      var _this2 = this;\n      var simultaneousArrays = this.gestures.map(function (gesture) {\n        return _this2.gestures.filter(function (x) {\n          return x !== gesture;\n        }).flatMap(function (x) {\n          return x.toGestureArray();\n        });\n      });\n      for (var i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], simultaneousArrays[i], this.requireGesturesToFail);\n      }\n    }\n  }]);\n  return SimultaneousGesture;\n}(ComposedGesture);\nexport var ExclusiveGesture = function (_ComposedGesture2) {\n  _inherits(ExclusiveGesture, _ComposedGesture2);\n  var _super3 = _createSuper(ExclusiveGesture);\n  function ExclusiveGesture() {\n    _classCallCheck(this, ExclusiveGesture);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(ExclusiveGesture, [{\n    key: \"prepare\",\n    value: function prepare() {\n      var gestureArrays = this.gestures.map(function (gesture) {\n        return gesture.toGestureArray();\n      });\n      var requireToFail = [];\n      for (var i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }]);\n  return ExclusiveGesture;\n}(ComposedGesture);","map":{"version":3,"names":["BaseGesture","Gesture","extendRelation","currentRelation","extendWith","undefined","_toConsumableArray","concat","ComposedGesture","_Gesture","_inherits","_super","_createSuper","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","_len","arguments","length","gestures","Array","_key","_createClass","key","value","prepareSingleGesture","gesture","simultaneousGestures","requireGesturesToFail","newConfig","_objectSpread","config","simultaneousWith","requireToFail","prepare","initialize","toGestureArray","flatMap","SimultaneousGesture","_ComposedGesture","_super2","apply","_this2","simultaneousArrays","map","filter","x","i","ExclusiveGesture","_ComposedGesture2","_super3","gestureArrays"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\gestureComposition.ts"],"sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    // this piece of magic works something like this:\n    // for every gesture in the array\n    const simultaneousArrays = this.gestures.map((gesture) =>\n      // we take the array it's in\n      this.gestures\n        // and make a copy without it\n        .filter((x) => x !== gesture)\n        // then we flatmap the result to get list of raw (not composed) gestures\n        // this way we don't make the gestures simultaneous with themselves, which is\n        // important when the gesture is `ExclusiveGesture` - we don't want to make\n        // exclusive gestures simultaneous\n        .flatMap((x) => x.toGestureArray())\n    );\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        simultaneousArrays[i],\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    // transforms the array of gestures into array of grouped raw (not composed) gestures\n    // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      // every group gets to wait for all groups before it\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}