{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"numberOfPointers\", \"direction\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport Hammer from '@egjs/hammerjs';\nimport { Direction } from \"./constants\";\nimport { GesturePropError } from \"./Errors\";\nimport DraggingGestureHandler from \"./DraggingGestureHandler\";\nimport { isnan } from \"./utils\";\nvar FlingGestureHandler = function (_DraggingGestureHandl) {\n  _inherits(FlingGestureHandler, _DraggingGestureHandl);\n  var _super = _createSuper(FlingGestureHandler);\n  function FlingGestureHandler() {\n    _classCallCheck(this, FlingGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FlingGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'swipe';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Swipe;\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(event) {\n      this.sendEvent(_objectSpread(_objectSpread({}, event), {}, {\n        eventType: Hammer.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      }));\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent(_objectSpread(_objectSpread({}, event), {}, {\n        eventType: Hammer.INPUT_END,\n        isFinal: true\n      }));\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this = this;\n      _get(_getPrototypeOf(FlingGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n      if (this.hasGestureFailed) {\n        return;\n      }\n      if (ev.isFinal) {\n        setTimeout(function () {\n          if (_this.isGestureRunning) {\n            _this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        var gesture = this.hammer.get(this.name);\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return {\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n  }, {\n    key: \"getTargetDirections\",\n    value: function getTargetDirections(direction) {\n      var directions = [];\n      if (direction & Direction.RIGHT) {\n        directions.push(Hammer.DIRECTION_RIGHT);\n      }\n      if (direction & Direction.LEFT) {\n        directions.push(Hammer.DIRECTION_LEFT);\n      }\n      if (direction & Direction.UP) {\n        directions.push(Hammer.DIRECTION_UP);\n      }\n      if (direction & Direction.DOWN) {\n        directions.push(Hammer.DIRECTION_DOWN);\n      }\n      return directions;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var _this$getConfig = this.getConfig(),\n        direction = _this$getConfig.direction;\n      var directions = [];\n      if (direction & Direction.RIGHT) {\n        directions.push(Hammer.DIRECTION_HORIZONTAL);\n      }\n      if (direction & Direction.LEFT) {\n        directions.push(Hammer.DIRECTION_HORIZONTAL);\n      }\n      if (direction & Direction.UP) {\n        directions.push(Hammer.DIRECTION_VERTICAL);\n      }\n      if (direction & Direction.DOWN) {\n        directions.push(Hammer.DIRECTION_VERTICAL);\n      }\n      directions = _toConsumableArray(new Set(directions));\n      if (directions.length === 0) return Hammer.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return Hammer.DIRECTION_ALL;\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref, _recognizer, _ref2) {\n      var numberOfPointers = _ref.numberOfPointers;\n      var pointerLength = _ref2.maxPointers;\n      var validPointerCount = pointerLength === numberOfPointers;\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$numberOfPointer = _ref3.numberOfPointers,\n        numberOfPointers = _ref3$numberOfPointer === void 0 ? 1 : _ref3$numberOfPointer,\n        direction = _ref3.direction,\n        props = _objectWithoutProperties(_ref3, _excluded);\n      if (isnan(direction) || typeof direction !== 'number') {\n        throw new GesturePropError('direction', direction, 'number');\n      }\n      return _get(_getPrototypeOf(FlingGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        numberOfPointers: numberOfPointers,\n        direction: direction\n      }, props));\n    }\n  }]);\n  return FlingGestureHandler;\n}(DraggingGestureHandler);\nexport default FlingGestureHandler;","map":{"version":3,"names":["Hammer","Direction","GesturePropError","DraggingGestureHandler","isnan","FlingGestureHandler","_DraggingGestureHandl","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","Swipe","value","onGestureActivated","event","sendEvent","_objectSpread","eventType","INPUT_MOVE","isFinal","isFirst","isGestureRunning","hasGestureFailed","INPUT_END","onRawEvent","ev","_this","_get","_getPrototypeOf","prototype","call","setTimeout","cancelEvent","gesture","hammer","name","options","enable","onStart","getHammerConfig","pointers","config","numberOfPointers","direction","getDirection","getTargetDirections","directions","RIGHT","push","DIRECTION_RIGHT","LEFT","DIRECTION_LEFT","UP","DIRECTION_UP","DOWN","DIRECTION_DOWN","_this$getConfig","getConfig","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","_toConsumableArray","Set","length","DIRECTION_NONE","DIRECTION_ALL","isGestureEnabledForEvent","_ref","_recognizer","_ref2","pointerLength","maxPointers","validPointerCount","failed","success","updateGestureConfig","_ref3","_ref3$numberOfPointer","props","_objectWithoutProperties","_excluded"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\FlingGestureHandler.ts"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\nimport { HammerInputExt } from './GestureHandler';\n\nclass FlingGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'swipe';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Swipe;\n  }\n\n  onGestureActivated(event: HammerInputExt) {\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_MOVE,\n      isFinal: false,\n      isFirst: true,\n    });\n    this.isGestureRunning = false;\n    this.hasGestureFailed = false;\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_END,\n      isFinal: true,\n    });\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      setTimeout(() => {\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore FIXME(TS)\n      if (gesture.options.enable(gesture, ev)) {\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      // @ts-ignore FIXME(TS)\n      pointers: this.config.numberOfPointers,\n      direction: this.getDirection(),\n    };\n  }\n\n  getTargetDirections(direction: number) {\n    const directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_LEFT);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_UP);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_DOWN);\n    }\n    // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n    return directions;\n  }\n\n  getDirection() {\n    // @ts-ignore FIXME(TS)\n    const { direction } = this.getConfig();\n\n    let directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    directions = [...new Set(directions)];\n\n    if (directions.length === 0) return Hammer.DIRECTION_NONE;\n    if (directions.length === 1) return directions[0];\n    return Hammer.DIRECTION_ALL;\n  }\n\n  isGestureEnabledForEvent(\n    { numberOfPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    const validPointerCount = pointerLength === numberOfPointers;\n    if (!validPointerCount && this.isGestureRunning) {\n      return { failed: true };\n    }\n    return { success: validPointerCount };\n  }\n\n  updateGestureConfig({ numberOfPointers = 1, direction, ...props }: any) {\n    if (isnan(direction) || typeof direction !== 'number') {\n      throw new GesturePropError('direction', direction, 'number');\n    }\n    return super.updateGestureConfig({\n      numberOfPointers,\n      direction,\n      ...props,\n    });\n  }\n}\n\nexport default FlingGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}