{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"scrollViewOffset\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport createAnimatedComponent from \"../../createAnimatedComponent\";\nimport { useScrollViewOffset, useAnimatedRef } from \"../hook\";\nvar AnimatedScrollViewComponent = createAnimatedComponent(ScrollView);\nvar AnimatedScrollView = forwardRef(function (props, ref) {\n  var scrollViewOffset = props.scrollViewOffset,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var aref = ref === null ? useAnimatedRef() : ref;\n  if (scrollViewOffset) {\n    useScrollViewOffset(aref, scrollViewOffset);\n  }\n  return React.createElement(AnimatedScrollViewComponent, _extends({\n    ref: aref\n  }, restProps));\n});\nexport default AnimatedScrollView;","map":{"version":3,"names":["React","forwardRef","ScrollView","createAnimatedComponent","useScrollViewOffset","useAnimatedRef","AnimatedScrollViewComponent","AnimatedScrollView","props","ref","scrollViewOffset","restProps","_objectWithoutProperties","_excluded","aref","createElement","_extends"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\component\\ScrollView.tsx"],"sourcesContent":["import React, { ForwardedRef, forwardRef, RefObject } from 'react';\nimport { ScrollView, ScrollViewProps } from 'react-native';\nimport type Animated from 'react-native-reanimated';\nimport createAnimatedComponent from '../../createAnimatedComponent';\nimport { SharedValue } from '../commonTypes';\nimport { useScrollViewOffset, useAnimatedRef } from '../hook';\n\nconst AnimatedScrollViewComponent = createAnimatedComponent(\n  ScrollView as any\n) as any;\n\nexport interface AnimatedScrollViewProps extends ScrollViewProps {\n  scrollViewOffset?: SharedValue<number>;\n}\n\ntype AnimatedScrollViewFC = React.FC<AnimatedScrollViewProps>;\n\nconst AnimatedScrollView: AnimatedScrollViewFC = forwardRef(\n  (props: AnimatedScrollViewProps, ref: ForwardedRef<Animated.ScrollView>) => {\n    const { scrollViewOffset, ...restProps } = props;\n    const aref = ref === null ? useAnimatedRef<ScrollView>() : ref;\n\n    if (scrollViewOffset) {\n      useScrollViewOffset(\n        aref as RefObject<Animated.ScrollView>,\n        scrollViewOffset\n      );\n    }\n    return <AnimatedScrollViewComponent ref={aref} {...restProps} />;\n  }\n);\nexport default AnimatedScrollView;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,IAAkBC,UAAU,QAAmB,OAAO;AAAA,OAAAC,UAAA;AAGlE,OAAOC,uBAAuB;AAE9B,SAASC,mBAAmB,EAAEC,cAAc;AAE5C,IAAMC,2BAA2B,GAAGH,uBAAuB,CACzDD,UAAU,CACJ;AAQR,IAAMK,kBAAwC,GAAGN,UAAU,CACzD,UAACO,KAA8B,EAAEC,GAAsC,EAAK;EAC1E,IAAQC,gBAAgB,GAAmBF,KAAK,CAAxCE,gBAAgB;IAAKC,SAAA,GAAAC,wBAAA,CAAcJ,KAAK,EAAAK,SAAA;EAChD,IAAMC,IAAI,GAAGL,GAAG,KAAK,IAAI,GAAGJ,cAAc,EAAc,GAAGI,GAAG;EAE9D,IAAIC,gBAAgB,EAAE;IACpBN,mBAAmB,CACjBU,IAAI,EACJJ,gBAAgB,CACjB;EACH;EACA,OAAOV,KAAA,CAAAe,aAAA,CAACT,2BAA2B,EAAAU,QAAA;IAACP,GAAG,EAAEK;EAAK,GAAKH,SAAS,EAAI;AAClE,CAAC,CACF;AACD,eAAeJ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}