{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport WorkletEventHandler from \"./reanimated2/WorkletEventHandler\";\nimport setAndForwardRef from \"./setAndForwardRef\";\nimport \"./reanimated2/layoutReanimation/animationsManager\";\nimport invariant from 'invariant';\nimport { adaptViewConfig } from \"./ConfigHelper\";\nimport { RNRenderer } from \"./reanimated2/platform-specific/RNRenderer\";\nimport { configureLayoutAnimations, enableLayoutAnimations, runOnUI, startMapper, stopMapper } from \"./reanimated2/core\";\nimport { isJest, isChromeDebugger, shouldBeUseWeb } from \"./reanimated2/PlatformChecker\";\nimport { initialUpdaterRun } from \"./reanimated2/animation\";\nimport { DefaultSharedTransition, LayoutAnimationType } from \"./reanimated2/layoutReanimation\";\nimport { makeViewDescriptorsSet } from \"./reanimated2/ViewDescriptorsSet\";\nimport { getShadowNodeWrapperFromRef } from \"./reanimated2/fabricUtils\";\nimport updateProps from \"./reanimated2/UpdateProps\";\nimport NativeReanimatedModule from \"./reanimated2/NativeReanimated\";\nimport { isSharedValue } from \"./reanimated2\";\nfunction dummyListener() {}\nfunction maybeBuild(layoutAnimationOrBuilder) {\n  var isAnimationBuilder = function isAnimationBuilder(value) {\n    return 'build' in layoutAnimationOrBuilder && typeof layoutAnimationOrBuilder.build === 'function';\n  };\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  var resultArr = [];\n  var _flattenArray = function _flattenArray(arr) {\n    arr.forEach(function (item) {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nvar isSameAnimatedProps = isSameAnimatedStyle;\nvar has = function has(key, x) {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\nfunction isInlineStyleTransform(transform) {\n  if (!transform) {\n    return false;\n  }\n  return transform.some(function (t) {\n    return hasInlineStyles(t);\n  });\n}\nfunction hasInlineStyles(style) {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some(function (key) {\n    var styleValue = style[key];\n    return isSharedValue(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);\n  });\n}\nfunction extractSharedValuesMapFromProps(props) {\n  var inlineProps = {};\n  for (var key in props) {\n    var value = props[key];\n    if (key === 'style') {\n      var _props$style;\n      var styles = flattenArray((_props$style = props.style) != null ? _props$style : []);\n      styles.forEach(function (style) {\n        if (!style) {\n          return;\n        }\n        for (var _ref of Object.entries(style)) {\n          var _ref2 = _slicedToArray(_ref, 2);\n          var _key = _ref2[0];\n          var styleValue = _ref2[1];\n          if (isSharedValue(styleValue)) {\n            inlineProps[_key] = styleValue;\n          } else if (_key === 'transform' && isInlineStyleTransform(styleValue)) {\n            inlineProps[_key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n  return inlineProps;\n}\nfunction inlinePropsHasChanged(styles1, styles2) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n  for (var key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n  return false;\n}\nvar _worklet_10214432427375_init_data = {\n  code: \"function getInlinePropsUpdate(inlineProps) {\\n  const getInlinePropsUpdate = this._recur;\\n  const {\\n    isSharedValue\\n  } = this._closure;\\n  const update = {};\\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\\n    if (key === 'transform') {\\n      update[key] = styleValue.map(function (transform) {\\n        return getInlinePropsUpdate(transform);\\n      });\\n    } else if (isSharedValue(styleValue)) {\\n      update[key] = styleValue.value;\\n    } else {\\n      update[key] = styleValue;\\n    }\\n  }\\n  return update;\\n}\",\n  location: \"C:\\\\alt\\\\projects\\\\school\\\\3035\\\\QueryLake\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\createAnimatedComponent.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getInlinePropsUpdate\\\",\\\"inlineProps\\\",\\\"_recur\\\",\\\"isSharedValue\\\",\\\"_closure\\\",\\\"update\\\",\\\"key\\\",\\\"styleValue\\\",\\\"Object\\\",\\\"entries\\\",\\\"map\\\",\\\"transform\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/alt/projects/school/3035/QueryLake/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\\\"],\\\"mappings\\\":\\\"AAqHA,SAAAA,oBAASA,CAAqBC,WAAA,EAAW;EAAA,MAAAD,oBAAA,QAAAE,MAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvC,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK,MAAM,CAACC,GAAG,EAAEC,UAAU,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACR,WAAW,CAAC,EAAE;IAC3D,IAAIK,GAAG,KAAK,WAAW,EAAE;MACvBD,MAAM,CAACC,GAAG,CAAC,GAAGC,UAAU,CAACG,GAAG,CAAC,UAAAC,SAAS,EAAI;QACxC,OAAOX,oBAAoB,CAACW,SAAS,CAAC;MACxC,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIR,aAAa,CAACI,UAAU,CAAC,EAAE;MACpCF,MAAM,CAACC,GAAG,CAAC,GAAGC,UAAU,CAACK,KAAK;IAChC,CAAC,MAAM;MACLP,MAAM,CAACC,GAAG,CAAC,GAAGC,UAAU;IAC1B;EACF;EACA,OAAOF,MAAM;AACf\\\"}\"\n};\nvar getInlinePropsUpdate = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f(inlineProps) {\n    var update = {};\n    for (var _ref3 of Object.entries(inlineProps)) {\n      var _ref4 = _slicedToArray(_ref3, 2);\n      var key = _ref4[0];\n      var styleValue = _ref4[1];\n      if (key === 'transform') {\n        update[key] = styleValue.map(function (transform) {\n          return getInlinePropsUpdate(transform);\n        });\n      } else if (isSharedValue(styleValue)) {\n        update[key] = styleValue.value;\n      } else {\n        update[key] = styleValue;\n      }\n    }\n    return update;\n  };\n  _f._closure = {\n    isSharedValue: isSharedValue\n  };\n  _f.__initData = _worklet_10214432427375_init_data;\n  _f.__workletHash = 10214432427375;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_13635933857374_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    viewTag\\n  } = this._closure;\\n  _removeShadowNodeFromRegistry(viewTag);\\n}\",\n  location: \"C:\\\\alt\\\\projects\\\\school\\\\3035\\\\QueryLake\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\createAnimatedComponent.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"viewTag\\\",\\\"_closure\\\",\\\"_removeShadowNodeFromRegistry\\\"],\\\"sources\\\":[\\\"C:/alt/projects/school/3035/QueryLake/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\\\"],\\\"mappings\\\":\\\"AAsPkB,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EACZC,6BAA6B,CAACF,OAAO,CAAC;AACxC\\\"}\"\n};\nvar _worklet_3330813578186_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    getInlinePropsUpdate,\\n    newInlineProps,\\n    updateProps,\\n    sharableViewDescriptors,\\n    maybeViewRef\\n  } = this._closure;\\n  const update = getInlinePropsUpdate(newInlineProps);\\n  updateProps(sharableViewDescriptors, update, maybeViewRef);\\n}\",\n  location: \"C:\\\\alt\\\\projects\\\\school\\\\3035\\\\QueryLake\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\createAnimatedComponent.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"getInlinePropsUpdate\\\",\\\"newInlineProps\\\",\\\"updateProps\\\",\\\"sharableViewDescriptors\\\",\\\"maybeViewRef\\\",\\\"_closure\\\",\\\"update\\\"],\\\"sources\\\":[\\\"C:/alt/projects/school/3035/QueryLake/node_modules/react-native-reanimated/lib/module/createAnimatedComponent.js\\\"],\\\"mappings\\\":\\\"AAwagC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,oBAAA;IAAAC,cAAA;IAAAC,WAAA;IAAAC,uBAAA;IAAAC;EAAA,SAAAC,QAAA;EAG5B,MAAMC,MAAM,GAAGN,oBAAoB,CAACC,cAAc,CAAC;EACnDC,WAAW,CAACC,uBAAuB,EAAEG,MAAM,EAAEF,YAAY,CAAC;AAC5D\\\"}\"\n};\nexport default function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n    var _super = _createSuper(AnimatedComponent);\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _super.call(this, props);\n      _defineProperty(_assertThisInitialized(_this), \"_styles\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_animatedProps\", void 0);\n      _defineProperty(_assertThisInitialized(_this), \"_viewTag\", -1);\n      _defineProperty(_assertThisInitialized(_this), \"_isFirstRender\", true);\n      _defineProperty(_assertThisInitialized(_this), \"animatedStyle\", {\n        value: {}\n      });\n      _defineProperty(_assertThisInitialized(_this), \"initialStyle\", {});\n      _defineProperty(_assertThisInitialized(_this), \"_component\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_inlinePropsViewDescriptors\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_inlinePropsMapperId\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_inlineProps\", {});\n      _defineProperty(_assertThisInitialized(_this), \"_setComponentRef\", setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = findNodeHandle(ref);\n          var _this$props = _this.props,\n            layout = _this$props.layout,\n            entering = _this$props.entering,\n            exiting = _this$props.exiting,\n            sharedTransitionTag = _this$props.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            if (!shouldBeUseWeb()) {\n              enableLayoutAnimations(true, false);\n            }\n            if (layout) {\n              configureLayoutAnimations(tag, LayoutAnimationType.LAYOUT, maybeBuild(layout));\n            }\n            if (entering) {\n              configureLayoutAnimations(tag, LayoutAnimationType.ENTERING, maybeBuild(entering));\n            }\n            if (exiting) {\n              configureLayoutAnimations(tag, LayoutAnimationType.EXITING, maybeBuild(exiting));\n            }\n            if (sharedTransitionTag) {\n              var _this$props$sharedTra;\n              var sharedElementTransition = (_this$props$sharedTra = _this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : DefaultSharedTransition;\n              configureLayoutAnimations(tag, LayoutAnimationType.SHARED_ELEMENT_TRANSITION, maybeBuild(sharedElementTransition), sharedTransitionTag);\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      }));\n      if (isJest()) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n      return _this;\n    }\n    _createClass(AnimatedComponent, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._detachNativeEvents();\n        this._detachStyles();\n        this._detachInlineProps();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._attachNativeEvents();\n        this._attachAnimatedStyles();\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _this$_component;\n        return (_this$_component = this._component) !== null && _this$_component !== void 0 && _this$_component.getScrollableNode ? this._component.getScrollableNode() : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n        var viewTag = null;\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            if (viewTag === null) {\n              viewTag = findNodeHandle(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (Platform.OS === 'web' && this._styles !== null) {\n          for (var style of this._styles) {\n            if (style !== null && style !== void 0 && style.viewsRef) {\n              style.viewsRef.remove(this);\n            }\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) !== null && _this$props$animatedP !== void 0 && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n          if (global._IS_FABRIC) {\n            var viewTag = this._viewTag;\n            runOnUI(function () {\n              var _e = [new global.Error(), -2, -27];\n              var _f = function _f() {\n                _removeShadowNodeFromRegistry(viewTag);\n              };\n              _f._closure = {\n                viewTag: viewTag\n              };\n              _f.__initData = _worklet_13635933857374_init_data;\n              _f.__workletHash = 13635933857374;\n              _f.__stackDetails = _e;\n              _f.__version = \"3.3.0\";\n              return _f;\n            }())();\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        for (var key in prevProps) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler && prop.current.reattachNeeded) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n        var viewTag = null;\n        for (var _key2 in this.props) {\n          var _prop = this.props[_key2];\n          if (has('current', _prop) && _prop.current instanceof WorkletEventHandler && _prop.current.reattachNeeded) {\n            if (viewTag === null) {\n              var node = this._getEventViewRef();\n              viewTag = findNodeHandle(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            _prop.current.registerForEvents(viewTag, _key2);\n            _prop.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options !== null && options !== void 0 && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component2, _this$_component2$set;\n          (_this$_component2 = this._component) === null || _this$_component2 === void 0 ? void 0 : (_this$_component2$set = _this$_component2.setNativeProps) === null || _this$_component2$set === void 0 ? void 0 : _this$_component2$set.call(_this$_component2, props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component3;\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component3 = this._component) !== null && _this$_component3 !== void 0 && _this$_component3.getAnimatableRef ? this._component.getAnimatableRef() : this;\n        if (Platform.OS === 'web') {\n          viewTag = findNodeHandle(component);\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var _hostInstance$viewCon;\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n          viewName = hostInstance === null || hostInstance === void 0 ? void 0 : (_hostInstance$viewCon = hostInstance.viewConfig) === null || _hostInstance$viewCon === void 0 ? void 0 : _hostInstance$viewCon.uiViewClassName;\n          viewConfig = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig;\n          if (global._IS_FABRIC) {\n            shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n          }\n        }\n        return {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n        var _this$props$animatedP2, _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) === null || _this$props$animatedP2 === void 0 ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n        this._viewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if (isJest()) {\n            _this2.animatedStyle.value = _objectSpread(_objectSpread({}, _this2.animatedStyle.value), style.initial.value);\n            style.animatedStyle.current = _this2.animatedStyle;\n          }\n        });\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) !== null && _this$props$animatedP3 !== void 0 && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"_attachInlineProps\",\n      value: function _attachInlineProps() {\n        var newInlineProps = extractSharedValuesMapFromProps(this.props);\n        var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n        if (hasChanged) {\n          if (!this._inlinePropsViewDescriptors) {\n            this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n            var _this$_getViewInfo2 = this._getViewInfo(),\n              viewTag = _this$_getViewInfo2.viewTag,\n              viewName = _this$_getViewInfo2.viewName,\n              shadowNodeWrapper = _this$_getViewInfo2.shadowNodeWrapper,\n              viewConfig = _this$_getViewInfo2.viewConfig;\n            if (Object.keys(newInlineProps).length && viewConfig) {\n              adaptViewConfig(viewConfig);\n            }\n            this._inlinePropsViewDescriptors.add({\n              tag: viewTag,\n              name: viewName,\n              shadowNodeWrapper: shadowNodeWrapper\n            });\n          }\n          var sharableViewDescriptors = this._inlinePropsViewDescriptors.sharableViewDescriptors;\n          var maybeViewRef = NativeReanimatedModule.native ? undefined : {\n            items: new Set([this])\n          };\n          var updaterFunction = function () {\n            var _e = [new global.Error(), -6, -27];\n            var _f = function _f() {\n              var update = getInlinePropsUpdate(newInlineProps);\n              updateProps(sharableViewDescriptors, update, maybeViewRef);\n            };\n            _f._closure = {\n              getInlinePropsUpdate: getInlinePropsUpdate,\n              newInlineProps: newInlineProps,\n              updateProps: updateProps,\n              sharableViewDescriptors: sharableViewDescriptors,\n              maybeViewRef: maybeViewRef\n            };\n            _f.__initData = _worklet_3330813578186_init_data;\n            _f.__workletHash = 3330813578186;\n            _f.__stackDetails = _e;\n            _f.__version = \"3.3.0\";\n            return _f;\n          }();\n          this._inlineProps = newInlineProps;\n          if (this._inlinePropsMapperId) {\n            stopMapper(this._inlinePropsMapperId);\n          }\n          this._inlinePropsMapperId = null;\n          if (Object.keys(newInlineProps).length) {\n            this._inlinePropsMapperId = startMapper(updaterFunction, Object.values(newInlineProps));\n          }\n        }\n      }\n    }, {\n      key: \"_detachInlineProps\",\n      value: function _detachInlineProps() {\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this._reattachNativeEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_filterNonAnimatedProps\",\n      value: function _filterNonAnimatedProps(inputProps) {\n        var _this3 = this;\n        var props = {};\n        var _loop2 = function _loop2() {\n          var value = inputProps[key];\n          if (key === 'style') {\n            var styleProp = inputProps.style;\n            var styles = flattenArray(styleProp != null ? styleProp : []);\n            var processedStyle = styles.map(function (style) {\n              if (style && style.viewDescriptors) {\n                style.viewsRef.add(_this3);\n                if (_this3._isFirstRender) {\n                  _this3.initialStyle = _objectSpread(_objectSpread({}, style.initial.value), initialUpdaterRun(style.initial.updater));\n                }\n                return _this3.initialStyle;\n              } else if (hasInlineStyles(style)) {\n                if (_this3._isFirstRender) {\n                  return getInlinePropsUpdate(style);\n                }\n                var newStyle = {};\n                for (var _ref5 of Object.entries(style)) {\n                  var _ref6 = _slicedToArray(_ref5, 2);\n                  var _key3 = _ref6[0];\n                  var styleValue = _ref6[1];\n                  if (!isSharedValue(styleValue) && !(_key3 === 'transform' && isInlineStyleTransform(styleValue))) {\n                    newStyle[_key3] = styleValue;\n                  }\n                }\n                return newStyle;\n              } else {\n                return style;\n              }\n            });\n            props[key] = StyleSheet.flatten(processedStyle);\n          } else if (key === 'animatedProps') {\n            var animatedProp = inputProps.animatedProps;\n            if (animatedProp.initial !== undefined) {\n              Object.keys(animatedProp.initial.value).forEach(function (key) {\n                var _animatedProp$initial, _animatedProp$viewsRe;\n                props[key] = (_animatedProp$initial = animatedProp.initial) === null || _animatedProp$initial === void 0 ? void 0 : _animatedProp$initial.value[key];\n                (_animatedProp$viewsRe = animatedProp.viewsRef) === null || _animatedProp$viewsRe === void 0 ? void 0 : _animatedProp$viewsRe.add(_this3);\n              });\n            }\n          } else if (has('current', value) && value.current instanceof WorkletEventHandler) {\n            if (value.current.eventNames.length > 0) {\n              value.current.eventNames.forEach(function (eventName) {\n                props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n              });\n            } else {\n              props[key] = dummyListener;\n            }\n          } else if (isSharedValue(value)) {\n            if (_this3._isFirstRender) {\n              props[key] = value.value;\n            }\n          } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n            props[key] = value;\n          }\n        };\n        for (var key in inputProps) {\n          _loop2();\n        }\n        return props;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._filterNonAnimatedProps(this.props);\n        if (isJest()) {\n          props.animatedStyle = this.animatedStyle;\n        }\n        if (this._isFirstRender) {\n          this._isFirstRender = false;\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return React.createElement(Component, _extends({}, props, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n    return AnimatedComponent;\n  }(React.Component);\n  _defineProperty(AnimatedComponent, \"displayName\", void 0);\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return React.forwardRef(function (props, ref) {\n    return React.createElement(AnimatedComponent, _extends({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["React","findNodeHandle","Platform","StyleSheet","WorkletEventHandler","setAndForwardRef","invariant","adaptViewConfig","RNRenderer","configureLayoutAnimations","enableLayoutAnimations","runOnUI","startMapper","stopMapper","isJest","isChromeDebugger","shouldBeUseWeb","initialUpdaterRun","DefaultSharedTransition","LayoutAnimationType","makeViewDescriptorsSet","getShadowNodeWrapperFromRef","updateProps","NativeReanimatedModule","isSharedValue","dummyListener","maybeBuild","layoutAnimationOrBuilder","isAnimationBuilder","value","build","flattenArray","array","Array","isArray","resultArr","_flattenArray","arr","forEach","item","push","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","has","key","x","undefined","isInlineStyleTransform","transform","some","t","hasInlineStyles","Object","keys","styleValue","extractSharedValuesMapFromProps","props","inlineProps","_props$style","_ref","entries","_ref2","_slicedToArray","inlinePropsHasChanged","styles1","styles2","length","_worklet_10214432427375_init_data","code","location","sourceMap","getInlinePropsUpdate","_e","global","Error","_f","update","_ref3","_ref4","map","_closure","__initData","__workletHash","__stackDetails","__version","_worklet_13635933857374_init_data","_worklet_3330813578186_init_data","createAnimatedComponent","Component","options","prototype","isReactComponent","name","AnimatedComponent","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","getForwardedRef","forwardedRef","setLocalRef","ref","tag","_this$props","layout","entering","exiting","sharedTransitionTag","LAYOUT","ENTERING","EXITING","_this$props$sharedTra","sharedElementTransition","sharedTransitionStyle","SHARED_ELEMENT_TRANSITION","_component","animatedStyle","_createClass","componentWillUnmount","_detachNativeEvents","_detachStyles","_detachInlineProps","componentDidMount","_attachNativeEvents","_attachAnimatedStyles","_attachInlineProps","_getEventViewRef","_this$_component","getScrollableNode","node","viewTag","prop","current","setNativeProps","registerForEvents","unregisterFromEvents","OS","_styles","remove","_viewTag","_this$props$animatedP","animatedProps","_IS_FABRIC","_removeShadowNodeFromRegistry","_reattachNativeEvents","prevProps","reattachNeeded","_updateFromNative","_this$_component2","_this$_component2$set","_getViewInfo","_this$_component3","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","_hostInstance$viewCon","hostInstance","findHostInstance_DEPRECATED","_nativeTag","uiViewClassName","_this2","_this$props$animatedP2","_this$props$animatedP3","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","hasOneSameStyle","_loop","prevStyle","isPresent","add","_objectSpread","initial","newInlineProps","hasChanged","_inlineProps","_inlinePropsViewDescriptors","_this$_getViewInfo2","sharableViewDescriptors","maybeViewRef","native","items","Set","updaterFunction","_inlinePropsMapperId","values","componentDidUpdate","_filterNonAnimatedProps","inputProps","_this3","_loop2","styleProp","processedStyle","_isFirstRender","initialStyle","updater","newStyle","_ref5","_ref6","flatten","animatedProp","_animatedProp$initial","_animatedProp$viewsRe","eventNames","eventName","listeners","render","platformProps","select","web","default","collapsable","createElement","_extends","_setComponentRef","displayName","forwardRef"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-reanimated\\lib\\module\\createAnimatedComponent.tsx"],"sourcesContent":["import React, { Component, ComponentType, MutableRefObject, Ref } from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport './reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\nimport {\n  configureLayoutAnimations,\n  enableLayoutAnimations,\n  runOnUI,\n  startMapper,\n  stopMapper,\n} from './reanimated2/core';\nimport {\n  isJest,\n  isChromeDebugger,\n  shouldBeUseWeb,\n} from './reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from './reanimated2/animation';\nimport {\n  BaseAnimationBuilder,\n  DefaultSharedTransition,\n  EntryExitAnimationFunction,\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n} from './reanimated2/layoutReanimation';\nimport {\n  SharedValue,\n  StyleProps,\n  ShadowNodeWrapper,\n} from './reanimated2/commonTypes';\nimport {\n  makeViewDescriptorsSet,\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from './reanimated2/ViewDescriptorsSet';\nimport { getShadowNodeWrapperFromRef } from './reanimated2/fabricUtils';\nimport updateProps from './reanimated2/UpdateProps';\nimport NativeReanimatedModule from './reanimated2/NativeReanimated';\nimport { isSharedValue } from './reanimated2';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nfunction maybeBuild(\n  layoutAnimationOrBuilder:\n    | ILayoutAnimationBuilder\n    | LayoutAnimationFunction\n    | Keyframe\n): LayoutAnimationFunction | Keyframe {\n  const isAnimationBuilder = (\n    value: ILayoutAnimationBuilder | LayoutAnimationFunction | Keyframe\n  ): value is ILayoutAnimationBuilder =>\n    'build' in layoutAnimationOrBuilder &&\n    typeof layoutAnimationOrBuilder.build === 'function';\n\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\n\ntype NestedArray<T> = T | NestedArray<T>[];\nfunction flattenArray<T>(array: NestedArray<T>): T[] {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  const resultArr: T[] = [];\n\n  const _flattenArray = (arr: NestedArray<T>[]): void => {\n    arr.forEach((item) => {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]) {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\nfunction isSameAnimatedStyle(\n  style1?: StyleProps,\n  style2?: StyleProps\n): boolean {\n  // We cannot use equality check to compare useAnimatedStyle outputs directly.\n  // Instead, we can compare its viewsRefs.\n  return style1?.viewsRef === style2?.viewsRef;\n}\n\nconst isSameAnimatedProps = isSameAnimatedStyle;\n\nconst has = <K extends string>(\n  key: K,\n  x: unknown\n): x is { [key in K]: unknown } => {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\n\nfunction isInlineStyleTransform(transform: any): boolean {\n  if (!transform) {\n    return false;\n  }\n  return transform.some((t: Record<string, any>) => hasInlineStyles(t));\n}\n\nfunction hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<InitialComponentProps>\n): Record<string, any> {\n  const inlineProps: Record<string, any> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [key, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[key] = styleValue;\n          } else if (\n            key === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nfunction inlinePropsHasChanged(styles1: StyleProps, styles2: StyleProps) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, any>) {\n  'worklet';\n  const update: Record<string, any> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (key === 'transform') {\n      update[key] = styleValue.map((transform: Record<string, any>) => {\n        return getInlinePropsUpdate(transform);\n      });\n    } else if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\ninterface AnimatedProps extends Record<string, unknown> {\n  viewDescriptors?: ViewDescriptorsSet;\n  viewsRef?: ViewRefSet<unknown>;\n  initial?: SharedValue<StyleProps>;\n}\n\nexport type AnimatedComponentProps<P extends Record<string, unknown>> = P & {\n  forwardedRef?: Ref<Component>;\n  style?: NestedArray<StyleProps>;\n  animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n  animatedStyle?: StyleProps;\n  layout?:\n    | BaseAnimationBuilder\n    | ILayoutAnimationBuilder\n    | typeof BaseAnimationBuilder;\n  entering?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  exiting?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  sharedTransitionTag?: string;\n  sharedTransitionStyle?: ILayoutAnimationBuilder;\n};\n\ntype Options<P> = {\n  setNativeProps: (ref: ComponentRef, props: P) => void;\n};\n\ninterface ComponentRef extends Component {\n  setNativeProps?: (props: Record<string, unknown>) => void;\n  getScrollableNode?: () => ComponentRef;\n  getAnimatableRef?: () => ComponentRef;\n}\n\nexport interface InitialComponentProps extends Record<string, unknown> {\n  ref?: Ref<Component>;\n  collapsable?: boolean;\n}\n\nexport default function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): ComponentType<AnimatedComponentProps<InitialComponentProps>> {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent extends React.Component<\n    AnimatedComponentProps<InitialComponentProps>\n  > {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _viewTag = -1;\n    _isFirstRender = true;\n    animatedStyle: { value: StyleProps } = { value: {} };\n    initialStyle = {};\n    _component: ComponentRef | null = null;\n    _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n    _inlinePropsMapperId: number | null = null;\n    _inlineProps: StyleProps = {};\n    static displayName: string;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.animatedStyle = { value: {} };\n      }\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._detachStyles();\n      this._detachInlineProps();\n    }\n\n    componentDidMount() {\n      this._attachNativeEvents();\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return this._component?.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      const node = this._getEventViewRef();\n      let viewTag = null; // We set it only if needed\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          if (viewTag === null) {\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (Platform.OS === 'web' && this._styles !== null) {\n        for (const style of this._styles) {\n          if (style?.viewsRef) {\n            style.viewsRef.remove(this);\n          }\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n        if (global._IS_FABRIC) {\n          const viewTag = this._viewTag;\n          runOnUI(() => {\n            _removeShadowNodeFromRegistry!(viewTag);\n          })();\n        }\n      }\n    }\n\n    _reattachNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n\n      let viewTag = null;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          if (viewTag === null) {\n            const node = this._getEventViewRef();\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options.setNativeProps(this._component!, props);\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        this._component?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo() {\n      let viewTag: number | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = this._component?.getAnimatableRef\n        ? this._component.getAnimatableRef()\n        : this;\n      if (Platform.OS === 'web') {\n        viewTag = findNodeHandle(component);\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n        // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n        viewTag = hostInstance?._nativeTag;\n        /**\n         * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n         * The name we're looking for is in the field named uiViewClassName.\n         */\n        viewName = hostInstance?.viewConfig?.uiViewClassName;\n\n        viewConfig = hostInstance?.viewConfig;\n\n        if (global._IS_FABRIC) {\n          shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n        }\n      }\n      return { viewTag, viewName, shadowNodeWrapper, viewConfig };\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._viewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) =>\n              isSameAnimatedStyle(style, prevStyle)\n            );\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.animatedStyle.value = {\n            ...this.animatedStyle.value,\n            ...style.initial.value,\n          };\n          style.animatedStyle.current = this.animatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (\n        prevAnimatedProps &&\n        !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)\n      ) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    _attachInlineProps() {\n      const newInlineProps: Record<string, any> =\n        extractSharedValuesMapFromProps(this.props);\n      const hasChanged = inlinePropsHasChanged(\n        newInlineProps,\n        this._inlineProps\n      );\n\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n          const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n            this._getViewInfo();\n\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            adaptViewConfig(viewConfig);\n          }\n\n          this._inlinePropsViewDescriptors.add({\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tag: viewTag!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            name: viewName!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            shadowNodeWrapper: shadowNodeWrapper!,\n          });\n        }\n        const sharableViewDescriptors =\n          this._inlinePropsViewDescriptors.sharableViewDescriptors;\n\n        const maybeViewRef = NativeReanimatedModule.native\n          ? undefined\n          : ({ items: new Set([this]) } as ViewRefSet<any>); // see makeViewsRefSet\n\n        const updaterFunction = () => {\n          'worklet';\n          const update = getInlinePropsUpdate(newInlineProps);\n          updateProps(sharableViewDescriptors, update, maybeViewRef);\n        };\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = startMapper(\n            updaterFunction,\n            Object.values(newInlineProps)\n          );\n        }\n      }\n    }\n\n    _detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      this._reattachNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _setComponentRef = setAndForwardRef<Component>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n        const tag = findNodeHandle(ref);\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n          if (layout) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.LAYOUT,\n              maybeBuild(layout)\n            );\n          }\n          if (entering) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(entering)\n            );\n          }\n          if (exiting) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.EXITING,\n              maybeBuild(exiting)\n            );\n          }\n          if (sharedTransitionTag) {\n            const sharedElementTransition =\n              this.props.sharedTransitionStyle ?? DefaultSharedTransition;\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.SHARED_ELEMENT_TRANSITION,\n              maybeBuild(sharedElementTransition),\n              sharedTransitionTag\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    _filterNonAnimatedProps(\n      inputProps: AnimatedComponentProps<InitialComponentProps>\n    ): Record<string, unknown> {\n      const props: Record<string, unknown> = {};\n      for (const key in inputProps) {\n        const value = inputProps[key];\n        if (key === 'style') {\n          const styleProp = inputProps.style;\n          const styles = flattenArray<StyleProps>(styleProp ?? []);\n          const processedStyle: StyleProps = styles.map((style) => {\n            if (style && style.viewDescriptors) {\n              // this is how we recognize styles returned by useAnimatedStyle\n              style.viewsRef.add(this);\n              if (this._isFirstRender) {\n                this.initialStyle = {\n                  ...style.initial.value,\n                  ...initialUpdaterRun<StyleProps>(style.initial.updater),\n                };\n              }\n              return this.initialStyle;\n            } else if (hasInlineStyles(style)) {\n              if (this._isFirstRender) {\n                return getInlinePropsUpdate(style);\n              }\n              const newStyle: StyleProps = {};\n              for (const [key, styleValue] of Object.entries(style)) {\n                if (\n                  !isSharedValue(styleValue) &&\n                  !(key === 'transform' && isInlineStyleTransform(styleValue))\n                ) {\n                  newStyle[key] = styleValue;\n                }\n              }\n              return newStyle;\n            } else {\n              return style;\n            }\n          });\n          props[key] = StyleSheet.flatten(processedStyle);\n        } else if (key === 'animatedProps') {\n          const animatedProp = inputProps.animatedProps as Partial<\n            AnimatedComponentProps<AnimatedProps>\n          >;\n          if (animatedProp.initial !== undefined) {\n            Object.keys(animatedProp.initial.value).forEach((key) => {\n              props[key] = animatedProp.initial?.value[key];\n              animatedProp.viewsRef?.add(this);\n            });\n          }\n        } else if (\n          has('current', value) &&\n          value.current instanceof WorkletEventHandler\n        ) {\n          if (value.current.eventNames.length > 0) {\n            value.current.eventNames.forEach((eventName) => {\n              props[eventName] = has('listeners', value.current)\n                ? (value.current.listeners as Record<string, unknown>)[\n                    eventName\n                  ]\n                : dummyListener;\n            });\n          } else {\n            props[key] = dummyListener;\n          }\n        } else if (isSharedValue(value)) {\n          if (this._isFirstRender) {\n            props[key] = (value as SharedValue<any>).value;\n          }\n        } else if (\n          key !== 'onGestureHandlerStateChange' ||\n          !isChromeDebugger()\n        ) {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n\n    render() {\n      const props = this._filterNonAnimatedProps(this.props);\n      if (isJest()) {\n        props.animatedStyle = this.animatedStyle;\n      }\n\n      if (this._isFirstRender) {\n        this._isFirstRender = false;\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n      return (\n        <Component {...props} ref={this._setComponentRef} {...platformProps} />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAA2D,OAAO;AAAA,OAAAC,cAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAE9E,OAAOC,mBAAmB;AAC1B,OAAOC,gBAAgB;AACvB;AACA,OAAOC,SAAS,MAAM,WAAW;AACjC,SAASC,eAAe;AACxB,SAASC,UAAU;AACnB,SACEC,yBAAyB,EACzBC,sBAAsB,EACtBC,OAAO,EACPC,WAAW,EACXC,UAAU;AAEZ,SACEC,MAAM,EACNC,gBAAgB,EAChBC,cAAc;AAEhB,SAASC,iBAAiB;AAC1B,SAEEC,uBAAuB,EAIvBC,mBAAmB;AAOrB,SACEC,sBAAsB;AAIxB,SAASC,2BAA2B;AACpC,OAAOC,WAAW;AAClB,OAAOC,sBAAsB;AAC7B,SAASC,aAAa;AAEtB,SAASC,aAAaA,CAAA,EAAG,CAEvB;AAGF,SAASC,UAAUA,CACjBC,wBAGY,EACwB;EACpC,IAAMC,kBAAkB,GACtB,SADIA,kBAAkBA,CACtBC,KAAmE;IAAA,OAEnE,OAAO,IAAIF,wBAAwB,IACnC,OAAOA,wBAAwB,CAACG,KAAK,KAAK,UAAU;EAAA;EAEtD,IAAIF,kBAAkB,CAACD,wBAAwB,CAAC,EAAE;IAChD,OAAOA,wBAAwB,CAACG,KAAK,EAAE;EACzC,CAAC,MAAM;IACL,OAAOH,wBAAwB;EACjC;AACF;AAGA,SAASI,YAAYA,CAAIC,KAAqB,EAAO;EACnD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACzB,OAAO,CAACA,KAAK,CAAC;EAChB;EACA,IAAMG,SAAc,GAAG,EAAE;EAEzB,IAAMC,aAAa,GAAI,SAAjBA,aAAaA,CAAIC,GAAqB,EAAW;IACrDA,GAAG,CAACC,OAAO,CAAE,UAAAC,IAAI,EAAK;MACpB,IAAIN,KAAK,CAACC,OAAO,CAACK,IAAI,CAAC,EAAE;QACvBH,aAAa,CAACG,IAAI,CAAC;MACrB,CAAC,MAAM;QACLJ,SAAS,CAACK,IAAI,CAACD,IAAI,CAAC;MACtB;IACF,CAAC,CAAC;EACJ,CAAC;EACDH,aAAa,CAACJ,KAAK,CAAC;EACpB,OAAOG,SAAS;AAClB;AAEA,SAASM,kBAAkBA,CAACC,MAAoB,EAAE;EAChD,OAAOA,MAAM,CAACC,MAAM,CAAE,UAAAC,KAAK;IAAA,OAAKA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,eAAe;EAAA,EAAC;AACzD;AAEA,SAASC,mBAAmBA,CAC1BC,MAAmB,EACnBC,MAAmB,EACV;EAGT,OAAO,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,QAAQ,OAAKD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,QAAQ;AAC9C;AAEA,IAAMC,mBAAmB,GAAGJ,mBAAmB;AAE/C,IAAMK,GAAG,GAAG,SAANA,GAAGA,CACPC,GAAM,EACNC,CAAU,EACuB;EACjC,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;IACpD,IAAIA,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKC,SAAS,EAAE;MACjC,OAAO,KAAK;IACd,CAAC,MAAM;MACL,OAAOF,GAAG,IAAIC,CAAC;IACjB;EACF;EACA,OAAO,KAAK;AACd,CAAC;AAED,SAASE,sBAAsBA,CAACC,SAAc,EAAW;EACvD,IAAI,CAACA,SAAS,EAAE;IACd,OAAO,KAAK;EACd;EACA,OAAOA,SAAS,CAACC,IAAI,CAAE,UAAAC,CAAsB;IAAA,OAAKC,eAAe,CAACD,CAAC,CAAC;EAAA,EAAC;AACvE;AAEA,SAASC,eAAeA,CAACf,KAAiB,EAAW;EACnD,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,KAAK;EACd;EACA,OAAOgB,MAAM,CAACC,IAAI,CAACjB,KAAK,CAAC,CAACa,IAAI,CAAE,UAAAL,GAAG,EAAK;IACtC,IAAMU,UAAU,GAAGlB,KAAK,CAACQ,GAAG,CAAC;IAC7B,OACE5B,aAAa,CAACsC,UAAU,CAAC,IACxBV,GAAG,KAAK,WAAW,IAAIG,sBAAsB,CAACO,UAAU,CAAE;EAE/D,CAAC,CAAC;AACJ;AAEA,SAASC,+BAA+BA,CACtCC,KAAoD,EAC/B;EACrB,IAAMC,WAAgC,GAAG,CAAC,CAAC;EAE3C,KAAK,IAAMb,GAAG,IAAIY,KAAK,EAAE;IACvB,IAAMnC,KAAK,GAAGmC,KAAK,CAACZ,GAAG,CAAC;IACxB,IAAIA,GAAG,KAAK,OAAO,EAAE;MAAA,IAAAc,YAAA;MACnB,IAAMxB,MAAM,GAAGX,YAAY,EAAAmC,YAAA,GAAaF,KAAK,CAACpB,KAAK,YAAAsB,YAAA,GAAI,EAAE,CAAC;MAC1DxB,MAAM,CAACJ,OAAO,CAAE,UAAAM,KAAK,EAAK;QACxB,IAAI,CAACA,KAAK,EAAE;UACV;QACF;QACA,SAAAuB,IAAA,IAAgCP,MAAM,CAACQ,OAAO,CAACxB,KAAK,CAAC,EAAE;UAAA,IAAAyB,KAAA,GAAAC,cAAA,CAAAH,IAAA;UAAA,IAA3Cf,IAAG,GAAAiB,KAAA;UAAA,IAAEP,UAAU,GAAAO,KAAA;UACzB,IAAI7C,aAAa,CAACsC,UAAU,CAAC,EAAE;YAC7BG,WAAW,CAACb,IAAG,CAAC,GAAGU,UAAU;UAC/B,CAAC,MAAM,IACLV,IAAG,KAAK,WAAW,IACnBG,sBAAsB,CAACO,UAAU,CAAC,EAClC;YACAG,WAAW,CAACb,IAAG,CAAC,GAAGU,UAAU;UAC/B;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAItC,aAAa,CAACK,KAAK,CAAC,EAAE;MAC/BoC,WAAW,CAACb,GAAG,CAAC,GAAGvB,KAAK;IAC1B;EACF;EAEA,OAAOoC,WAAW;AACpB;AAEA,SAASM,qBAAqBA,CAACC,OAAmB,EAAEC,OAAmB,EAAE;EACvE,IAAIb,MAAM,CAACC,IAAI,CAACW,OAAO,CAAC,CAACE,MAAM,KAAKd,MAAM,CAACC,IAAI,CAACY,OAAO,CAAC,CAACC,MAAM,EAAE;IAC/D,OAAO,IAAI;EACb;EAEA,KAAK,IAAMtB,GAAG,IAAIQ,MAAM,CAACC,IAAI,CAACW,OAAO,CAAC,EAAE;IACtC,IAAIA,OAAO,CAACpB,GAAG,CAAC,KAAKqB,OAAO,CAACrB,GAAG,CAAC,EAAE,OAAO,IAAI;EAChD;EAEA,OAAO,KAAK;AACd;AAAA,IAAAuB,iCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAAA,IAESC,oBAAoB;EAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAC,EAAA,YAAAA,GAAClB,WAAgC,EAAE;IAE9D,IAAMmB,MAA2B,GAAG,CAAC,CAAC;IACtC,SAAAC,KAAA,IAAgCzB,MAAM,CAACQ,OAAO,CAACH,WAAW,CAAC,EAAE;MAAA,IAAAqB,KAAA,GAAAhB,cAAA,CAAAe,KAAA;MAAA,IAAjDjC,GAAG,GAAAkC,KAAA;MAAA,IAAExB,UAAU,GAAAwB,KAAA;MACzB,IAAIlC,GAAG,KAAK,WAAW,EAAE;QACvBgC,MAAM,CAAChC,GAAG,CAAC,GAAGU,UAAU,CAACyB,GAAG,CAAE,UAAA/B,SAA8B,EAAK;UAC/D,OAAOuB,oBAAoB,CAACvB,SAAS,CAAC;QACxC,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIhC,aAAa,CAACsC,UAAU,CAAC,EAAE;QACpCsB,MAAM,CAAChC,GAAG,CAAC,GAAGU,UAAU,CAACjC,KAAK;MAChC,CAAC,MAAM;QACLuD,MAAM,CAAChC,GAAG,CAAC,GAAGU,UAAU;MAC1B;IACF;IACA,OAAOsB,MAAM;EACf;EAAAD,EAAA,CAAAK,QAAA;IAAAhE,aAAA,EAjMOA;EAAgB;EAAA2D,EAAA,CAAAM,UAAA,GAAAd,iCAAA;EAAAQ,EAAA,CAAAO,aAAA;EAAAP,EAAA,CAAAQ,cAAA,GAAAX,EAAA;EAAAG,EAAA,CAAAS,SAAA;EAAA,OAAAT,EAAA;AAAA;AAAA,IAAAU,iCAAA;EAAAjB,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAAA,IAAAgB,gCAAA;EAAAlB,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AA+OvB,eAAe,SAASiB,uBAAuBA,CAC7CC,SAA+C,EAC/CC,OAAwC,EACsB;EAC9D3F,SAAS,CACP,OAAO0F,SAAS,KAAK,UAAU,IAC5BA,SAAS,CAACE,SAAS,IAAIF,SAAS,CAACE,SAAS,CAACC,gBAAiB,EAC9D,oDAAmDH,SAAS,CAACI,IAAK,oLAAmL,CACvP;EAAA,IAEKC,iBAAiB,aAAAC,gBAAA;IAAAC,SAAA,CAAAF,iBAAA,EAAAC,gBAAA;IAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,iBAAA;IAerB,SAAAA,kBAAYrC,KAAoD,EAAE;MAAA,IAAA0C,KAAA;MAAAC,eAAA,OAAAN,iBAAA;MAChEK,KAAA,GAAAF,MAAA,CAAAI,IAAA,OAAM5C,KAAK;MAAE6C,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,cAbgB,IAAI;MAAAG,eAAA,CAAAC,sBAAA,CAAAJ,KAAA;MAAAG,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,eAExB,CAAC,CAAC;MAAAG,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,qBACI,IAAI;MAAAG,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,oBACkB;QAAE7E,KAAK,EAAE,CAAC;MAAE,CAAC;MAAAgF,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,mBACrC,CAAC,CAAC;MAAAG,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,iBACiB,IAAI;MAAAG,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,kCACmB,IAAI;MAAAG,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,2BACvB,IAAI;MAAAG,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,mBACf,CAAC,CAAC;MAAAG,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,uBA+TVrG,gBAAgB,CAAY;QAC7C0G,eAAe,EAAE,SAAAA,gBAAA;UAAA,OACfL,KAAA,CAAK1C,KAAK,CAACgD,YAEV;QAAA;QACHC,WAAW,EAAG,SAAAA,YAAAC,GAAG,EAAK;UAEpB,IAAMC,GAAG,GAAGlH,cAAc,CAACiH,GAAG,CAAC;UAC/B,IAAAE,WAAA,GAA2DV,KAAA,CAAK1C,KAAK;YAA7DqD,MAAM,GAAAD,WAAA,CAANC,MAAM;YAAEC,QAAQ,GAAAF,WAAA,CAARE,QAAQ;YAAEC,OAAO,GAAAH,WAAA,CAAPG,OAAO;YAAEC,mBAAA,GAAAJ,WAAA,CAAAI,mBAAA;UACnC,IACE,CAACH,MAAM,IAAIC,QAAQ,IAAIC,OAAO,IAAIC,mBAAmB,KACrDL,GAAG,IAAI,IAAI,EACX;YACA,IAAI,CAACnG,cAAc,EAAE,EAAE;cACrBN,sBAAsB,CAAC,IAAI,EAAE,KAAK,CAAC;YACrC;YACA,IAAI2G,MAAM,EAAE;cACV5G,yBAAyB,CACvB0G,GAAG,EACHhG,mBAAmB,CAACsG,MAAM,EAC1B/F,UAAU,CAAC2F,MAAM,CAAC,CACnB;YACH;YACA,IAAIC,QAAQ,EAAE;cACZ7G,yBAAyB,CACvB0G,GAAG,EACHhG,mBAAmB,CAACuG,QAAQ,EAC5BhG,UAAU,CAAC4F,QAAQ,CAAC,CACrB;YACH;YACA,IAAIC,OAAO,EAAE;cACX9G,yBAAyB,CACvB0G,GAAG,EACHhG,mBAAmB,CAACwG,OAAO,EAC3BjG,UAAU,CAAC6F,OAAO,CAAC,CACpB;YACH;YACA,IAAIC,mBAAmB,EAAE;cAAA,IAAAI,qBAAA;cACvB,IAAMC,uBAAuB,IAAAD,qBAAA,GAC3BlB,KAAA,CAAK1C,KAAK,CAAC8D,qBAAqB,YAAAF,qBAAA,GAAI1G,uBAAuB;cAC7DT,yBAAyB,CACvB0G,GAAG,EACHhG,mBAAmB,CAAC4G,yBAAyB,EAC7CrG,UAAU,CAACmG,uBAAuB,CAAC,EACnCL,mBAAmB,CACpB;YACH;UACF;UAEA,IAAIN,GAAG,KAAKR,KAAA,CAAKsB,UAAU,EAAE;YAC3BtB,KAAA,CAAKsB,UAAU,GAAGd,GAAG;UACvB;QACF;MACF,CAAC,CAAC;MA/WA,IAAIpG,MAAM,EAAE,EAAE;QACZ4F,KAAA,CAAKuB,aAAa,GAAG;UAAEpG,KAAK,EAAE,CAAC;QAAE,CAAC;MACpC;MAAA,OAAA6E,KAAA;IACF;IAAAwB,YAAA,CAAA7B,iBAAA;MAAAjD,GAAA;MAAAvB,KAAA,EAEA,SAAAsG,qBAAA,EAAuB;QACrB,IAAI,CAACC,mBAAmB,EAAE;QAC1B,IAAI,CAACC,aAAa,EAAE;QACpB,IAAI,CAACC,kBAAkB,EAAE;MAC3B;IAAA;MAAAlF,GAAA;MAAAvB,KAAA,EAEA,SAAA0G,kBAAA,EAAoB;QAClB,IAAI,CAACC,mBAAmB,EAAE;QAC1B,IAAI,CAACC,qBAAqB,EAAE;QAC5B,IAAI,CAACC,kBAAkB,EAAE;MAC3B;IAAA;MAAAtF,GAAA;MAAAvB,KAAA,EAEA,SAAA8G,iBAAA,EAAmB;QAAA,IAAAC,gBAAA;QAGjB,OAAO,CAAAA,gBAAA,OAAI,CAACZ,UAAU,cAAAY,gBAAA,eAAfA,gBAAA,CAAiBC,iBAAiB,GACrC,IAAI,CAACb,UAAU,CAACa,iBAAiB,EAAE,GACnC,IAAI,CAACb,UAAU;MACrB;IAAA;MAAA5E,GAAA;MAAAvB,KAAA,EAEA,SAAA2G,oBAAA,EAAsB;QACpB,IAAMM,IAAI,GAAG,IAAI,CAACH,gBAAgB,EAAE;QACpC,IAAII,OAAO,GAAG,IAAI;QAElB,KAAK,IAAM3F,GAAG,IAAI,IAAI,CAACY,KAAK,EAAE;UAC5B,IAAMgF,IAAI,GAAG,IAAI,CAAChF,KAAK,CAACZ,GAAG,CAAC;UAC5B,IACED,GAAG,CAAC,SAAS,EAAE6F,IAAI,CAAC,IACpBA,IAAI,CAACC,OAAO,YAAY7I,mBAAmB,EAC3C;YACA,IAAI2I,OAAO,KAAK,IAAI,EAAE;cACpBA,OAAO,GAAG9I,cAAc,CAACgG,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEiD,cAAc,GAAG,IAAI,GAAGJ,IAAI,CAAC;YACjE;YACAE,IAAI,CAACC,OAAO,CAACE,iBAAiB,CAACJ,OAAO,EAAY3F,GAAG,CAAC;UACxD;QACF;MACF;IAAA;MAAAA,GAAA;MAAAvB,KAAA,EAEA,SAAAuG,oBAAA,EAAsB;QACpB,KAAK,IAAMhF,GAAG,IAAI,IAAI,CAACY,KAAK,EAAE;UAC5B,IAAMgF,IAAI,GAAG,IAAI,CAAChF,KAAK,CAACZ,GAAG,CAAC;UAC5B,IACED,GAAG,CAAC,SAAS,EAAE6F,IAAI,CAAC,IACpBA,IAAI,CAACC,OAAO,YAAY7I,mBAAmB,EAC3C;YACA4I,IAAI,CAACC,OAAO,CAACG,oBAAoB,EAAE;UACrC;QACF;MACF;IAAA;MAAAhG,GAAA;MAAAvB,KAAA,EAEA,SAAAwG,cAAA,EAAgB;QACd,IAAInI,QAAQ,CAACmJ,EAAE,KAAK,KAAK,IAAI,IAAI,CAACC,OAAO,KAAK,IAAI,EAAE;UAClD,KAAK,IAAM1G,KAAK,IAAI,IAAI,CAAC0G,OAAO,EAAE;YAChC,IAAI1G,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEK,QAAQ,EAAE;cACnBL,KAAK,CAACK,QAAQ,CAACsG,MAAM,CAAC,IAAI,CAAC;YAC7B;UACF;QACF,CAAC,MAAM,IAAI,IAAI,CAACC,QAAQ,KAAK,CAAC,CAAC,IAAI,IAAI,CAACF,OAAO,KAAK,IAAI,EAAE;UAAA,IAAAG,qBAAA;UACxD,KAAK,IAAM7G,MAAK,IAAI,IAAI,CAAC0G,OAAO,EAAE;YAChC1G,MAAK,CAACC,eAAe,CAAC0G,MAAM,CAAC,IAAI,CAACC,QAAQ,CAAC;UAC7C;UACA,KAAAC,qBAAA,GAAI,IAAI,CAACzF,KAAK,CAAC0F,aAAa,cAAAD,qBAAA,eAAxBA,qBAAA,CAA0B5G,eAAe,EAAE;YAC7C,IAAI,CAACmB,KAAK,CAAC0F,aAAa,CAAC7G,eAAe,CAAC0G,MAAM,CAAC,IAAI,CAACC,QAAQ,CAAC;UAChE;UACA,IAAIvE,MAAM,CAAC0E,UAAU,EAAE;YACrB,IAAMZ,OAAO,GAAG,IAAI,CAACS,QAAQ;YAC7B7I,OAAO;cAAA,IAAAqE,EAAA,QAAAC,MAAA,CAAAC,KAAA;cAAA,IAAAC,EAAA,YAAAA,GAAA,EAAO;gBACZyE,6BAA6B,CAAEb,OAAO,CAAC;cACzC,CAAC;cAAA5D,EAAA,CAAAK,QAAA;gBAAAuD,OAAA,E;;;;;;;eAAA,CAAC,EAAE;UACN;QACF;MACF;IAAA;MAAA3F,GAAA;MAAAvB,KAAA,EAEA,SAAAgI,sBACEC,SAAwD,EACxD;QACA,KAAK,IAAM1G,GAAG,IAAI0G,SAAS,EAAE;UAC3B,IAAMd,IAAI,GAAG,IAAI,CAAChF,KAAK,CAACZ,GAAG,CAAC;UAC5B,IACED,GAAG,CAAC,SAAS,EAAE6F,IAAI,CAAC,IACpBA,IAAI,CAACC,OAAO,YAAY7I,mBAAmB,IAC3C4I,IAAI,CAACC,OAAO,CAACc,cAAc,EAC3B;YACAf,IAAI,CAACC,OAAO,CAACG,oBAAoB,EAAE;UACrC;QACF;QAEA,IAAIL,OAAO,GAAG,IAAI;QAElB,KAAK,IAAM3F,KAAG,IAAI,IAAI,CAACY,KAAK,EAAE;UAC5B,IAAMgF,KAAI,GAAG,IAAI,CAAChF,KAAK,CAACZ,KAAG,CAAC;UAC5B,IACED,GAAG,CAAC,SAAS,EAAE6F,KAAI,CAAC,IACpBA,KAAI,CAACC,OAAO,YAAY7I,mBAAmB,IAC3C4I,KAAI,CAACC,OAAO,CAACc,cAAc,EAC3B;YACA,IAAIhB,OAAO,KAAK,IAAI,EAAE;cACpB,IAAMD,IAAI,GAAG,IAAI,CAACH,gBAAgB,EAAE;cACpCI,OAAO,GAAG9I,cAAc,CAACgG,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEiD,cAAc,GAAG,IAAI,GAAGJ,IAAI,CAAC;YACjE;YACAE,KAAI,CAACC,OAAO,CAACE,iBAAiB,CAACJ,OAAO,EAAY3F,KAAG,CAAC;YACtD4F,KAAI,CAACC,OAAO,CAACc,cAAc,GAAG,KAAK;UACrC;QACF;MACF;IAAA;MAAA3G,GAAA;MAAAvB,KAAA,EAEA,SAAAmI,kBAAkBhG,KAAiB,EAAE;QACnC,IAAIiC,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEiD,cAAc,EAAE;UAE3BjD,OAAO,CAACiD,cAAc,CAAC,IAAI,CAAClB,UAAU,EAAGhE,KAAK,CAAC;QACjD,CAAC,MAAM;UAAA,IAAAiG,iBAAA,EAAAC,qBAAA;UAEL,CAAAD,iBAAA,OAAI,CAACjC,UAAU,cAAAiC,iBAAA,wBAAAC,qBAAA,GAAfD,iBAAA,CAAiBf,cAAc,cAAAgB,qBAAA,uBAA/BA,qBAAA,CAAAtD,IAAA,CAAAqD,iBAAA,EAAkCjG,KAAK,CAAC;QAC1C;MACF;IAAA;MAAAZ,GAAA;MAAAvB,KAAA,EAEA,SAAAsI,aAAA,EAAe;QAAA,IAAAC,iBAAA;QACb,IAAIrB,OAAsB;QAC1B,IAAIsB,QAAuB;QAC3B,IAAIC,iBAA2C,GAAG,IAAI;QACtD,IAAIC,UAAU;QAGd,IAAMC,SAAS,GAAG,CAAAJ,iBAAA,OAAI,CAACpC,UAAU,cAAAoC,iBAAA,eAAfA,iBAAA,CAAiBK,gBAAgB,GAC/C,IAAI,CAACzC,UAAU,CAACyC,gBAAgB,EAAE,GAClC,IAAI;QACR,IAAIvK,QAAQ,CAACmJ,EAAE,KAAK,KAAK,EAAE;UACzBN,OAAO,GAAG9I,cAAc,CAACuK,SAAS,CAAC;UACnCH,QAAQ,GAAG,IAAI;UACfC,iBAAiB,GAAG,IAAI;UACxBC,UAAU,GAAG,IAAI;QACnB,CAAC,MAAM;UAAA,IAAAG,qBAAA;UAEL,IAAMC,YAAY,GAAGnK,UAAU,CAACoK,2BAA2B,CAACJ,SAAS,CAAC;UACtE,IAAI,CAACG,YAAY,EAAE;YACjB,MAAM,IAAIzF,KAAK,CACb,yEAAyE,CAC1E;UACH;UAEA6D,OAAO,GAAG4B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,UAAU;UAKlCR,QAAQ,GAAGM,YAAY,aAAZA,YAAY,wBAAAD,qBAAA,GAAZC,YAAY,CAAEJ,UAAU,cAAAG,qBAAA,uBAAxBA,qBAAA,CAA0BI,eAAe;UAEpDP,UAAU,GAAGI,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEJ,UAAU;UAErC,IAAItF,MAAM,CAAC0E,UAAU,EAAE;YACrBW,iBAAiB,GAAGjJ,2BAA2B,CAAC,IAAI,CAAC;UACvD;QACF;QACA,OAAO;UAAE0H,OAAO,EAAPA,OAAO;UAAEsB,QAAQ,EAARA,QAAQ;UAAEC,iBAAiB,EAAjBA,iBAAiB;UAAEC,UAAA,EAAAA;QAAW,CAAC;MAC7D;IAAA;MAAAnH,GAAA;MAAAvB,KAAA,EAEA,SAAA4G,sBAAA,EAAwB;QAAA,IAAAsC,MAAA;QAAA,IAAAC,sBAAA,EAAAC,sBAAA;QACtB,IAAMvI,MAAM,GAAG,IAAI,CAACsB,KAAK,CAACpB,KAAK,GAC3BH,kBAAkB,CAACV,YAAY,CAAa,IAAI,CAACiC,KAAK,CAACpB,KAAK,CAAC,CAAC,GAC9D,EAAE;QACN,IAAMsI,UAAU,GAAG,IAAI,CAAC5B,OAAO;QAC/B,IAAI,CAACA,OAAO,GAAG5G,MAAM;QAErB,IAAMyI,iBAAiB,GAAG,IAAI,CAACC,cAAc;QAC7C,IAAI,CAACA,cAAc,GAAG,IAAI,CAACpH,KAAK,CAAC0F,aAAa;QAE9C,IAAA2B,kBAAA,GACE,IAAI,CAAClB,YAAY,EAAE;UADbpB,OAAO,GAAAsC,kBAAA,CAAPtC,OAAO;UAAEsB,QAAQ,GAAAgB,kBAAA,CAARhB,QAAQ;UAAEC,iBAAiB,GAAAe,kBAAA,CAAjBf,iBAAiB;UAAEC,UAAA,GAAAc,kBAAA,CAAAd,UAAA;QAI9C,IAAMe,mBAAmB,GACvB,EAAAN,sBAAA,OAAI,CAAChH,KAAK,CAAC0F,aAAa,cAAAsB,sBAAA,uBAAxBA,sBAAA,CAA0BnI,eAAe,KAAIH,MAAM,CAACgC,MAAM;QAC5D,IAAI4G,mBAAmB,IAAIf,UAAU,EAAE;UACrChK,eAAe,CAACgK,UAAU,CAAC;QAC7B;QAEA,IAAI,CAACf,QAAQ,GAAGT,OAAiB;QAGjC,IAAImC,UAAU,EAAE;UAEd,IAAMK,eAAe,GACnB7I,MAAM,CAACgC,MAAM,KAAK,CAAC,IACnBwG,UAAU,CAACxG,MAAM,KAAK,CAAC,IACvB5B,mBAAmB,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAEwI,UAAU,CAAC,CAAC,CAAC,CAAC;UAE/C,IAAI,CAACK,eAAe,EAAE;YAAA,IAAAC,KAAA,YAAAA,MAAAC,SAAA,EAEgB;cAClC,IAAMC,SAAS,GAAGhJ,MAAM,CAACe,IAAI,CAAE,UAAAb,KAAK;gBAAA,OAClCE,mBAAmB,CAACF,KAAK,EAAE6I,SAAS,CAAC;cAAA,EACtC;cACD,IAAI,CAACC,SAAS,EAAE;gBACdD,SAAS,CAAC5I,eAAe,CAAC0G,MAAM,CAACR,OAAO,CAAC;cAC3C;YACF;YAPA,KAAK,IAAM0C,SAAS,IAAIP,UAAU;cAAAM,KAAA,CAAAC,SAAA;YAAA;UAQpC;QACF;QAEA/I,MAAM,CAACJ,OAAO,CAAE,UAAAM,KAAK,EAAK;UACxBA,KAAK,CAACC,eAAe,CAAC8I,GAAG,CAAC;YACxBxE,GAAG,EAAE4B,OAAO;YACZ3C,IAAI,EAAEiE,QAAQ;YACdC,iBAAA,EAAAA;UACF,CAAC,CAAC;UACF,IAAIxJ,MAAM,EAAE,EAAE;YAOZiK,MAAI,CAAC9C,aAAa,CAACpG,KAAK,GAAA+J,aAAA,CAAAA,aAAA,KACnBb,MAAI,CAAC9C,aAAa,CAACpG,KAAK,GACxBe,KAAK,CAACiJ,OAAO,CAAChK,KAAA,CAClB;YACDe,KAAK,CAACqF,aAAa,CAACgB,OAAO,GAAG8B,MAAI,CAAC9C,aAAa;UAClD;QACF,CAAC,CAAC;QAGF,IACEkD,iBAAiB,IACjB,CAACjI,mBAAmB,CAACiI,iBAAiB,EAAE,IAAI,CAACnH,KAAK,CAAC0F,aAAa,CAAC,EACjE;UACAyB,iBAAiB,CAACtI,eAAe,CAAE0G,MAAM,CAACR,OAAO,CAAW;QAC9D;QAGA,KAAAkC,sBAAA,GAAI,IAAI,CAACjH,KAAK,CAAC0F,aAAa,cAAAuB,sBAAA,eAAxBA,sBAAA,CAA0BpI,eAAe,EAAE;UAC7C,IAAI,CAACmB,KAAK,CAAC0F,aAAa,CAAC7G,eAAe,CAAC8I,GAAG,CAAC;YAE3CxE,GAAG,EAAE4B,OAAQ;YAEb3C,IAAI,EAAEiE,QAAS;YAEfC,iBAAiB,EAAEA;UACrB,CAAC,CAAC;QACJ;MACF;IAAA;MAAAlH,GAAA;MAAAvB,KAAA,EAEA,SAAA6G,mBAAA,EAAqB;QACnB,IAAMoD,cAAmC,GACvC/H,+BAA+B,CAAC,IAAI,CAACC,KAAK,CAAC;QAC7C,IAAM+H,UAAU,GAAGxH,qBAAqB,CACtCuH,cAAc,EACd,IAAI,CAACE,YAAY,CAClB;QAED,IAAID,UAAU,EAAE;UACd,IAAI,CAAC,IAAI,CAACE,2BAA2B,EAAE;YACrC,IAAI,CAACA,2BAA2B,GAAG7K,sBAAsB,EAAE;YAE3D,IAAA8K,mBAAA,GACE,IAAI,CAAC/B,YAAY,EAAE;cADbpB,OAAO,GAAAmD,mBAAA,CAAPnD,OAAO;cAAEsB,QAAQ,GAAA6B,mBAAA,CAAR7B,QAAQ;cAAEC,iBAAiB,GAAA4B,mBAAA,CAAjB5B,iBAAiB;cAAEC,UAAA,GAAA2B,mBAAA,CAAA3B,UAAA;YAG9C,IAAI3G,MAAM,CAACC,IAAI,CAACiI,cAAc,CAAC,CAACpH,MAAM,IAAI6F,UAAU,EAAE;cACpDhK,eAAe,CAACgK,UAAU,CAAC;YAC7B;YAEA,IAAI,CAAC0B,2BAA2B,CAACN,GAAG,CAAC;cAEnCxE,GAAG,EAAE4B,OAAQ;cAEb3C,IAAI,EAAEiE,QAAS;cAEfC,iBAAiB,EAAEA;YACrB,CAAC,CAAC;UACJ;UACA,IAAM6B,uBAAuB,GAC3B,IAAI,CAACF,2BAA2B,CAACE,uBAAuB;UAE1D,IAAMC,YAAY,GAAG7K,sBAAsB,CAAC8K,MAAM,GAC9C/I,SAAS,GACR;YAAEgJ,KAAK,EAAE,IAAIC,GAAG,CAAC,CAAC,IAAI,CAAC;UAAE,CAAqB;UAEnD,IAAMC,eAAe;YAAA,IAAAxH,EAAA,QAAAC,MAAA,CAAAC,KAAA;YAAA,IAAAC,EAAA,YAAAA,GAAA,EAAS;cAE5B,IAAMC,MAAM,GAAGL,oBAAoB,CAAC+G,cAAc,CAAC;cACnDxK,WAAW,CAAC6K,uBAAuB,EAAE/G,MAAM,EAAEgH,YAAY,CAAC;YAC5D,CAAC;YAAAjH,EAAA,CAAAK,QAAA;cAAAT,oBAAA,E;;;;;;;;;;;aAAA;UACD,IAAI,CAACiH,YAAY,GAAGF,cAAc;UAClC,IAAI,IAAI,CAACW,oBAAoB,EAAE;YAC7B5L,UAAU,CAAC,IAAI,CAAC4L,oBAAoB,CAAC;UACvC;UACA,IAAI,CAACA,oBAAoB,GAAG,IAAI;UAChC,IAAI7I,MAAM,CAACC,IAAI,CAACiI,cAAc,CAAC,CAACpH,MAAM,EAAE;YACtC,IAAI,CAAC+H,oBAAoB,GAAG7L,WAAW,CACrC4L,eAAe,EACf5I,MAAM,CAAC8I,MAAM,CAACZ,cAAc,CAAC,CAC9B;UACH;QACF;MACF;IAAA;MAAA1I,GAAA;MAAAvB,KAAA,EAEA,SAAAyG,mBAAA,EAAqB;QACnB,IAAI,IAAI,CAACmE,oBAAoB,EAAE;UAC7B5L,UAAU,CAAC,IAAI,CAAC4L,oBAAoB,CAAC;QACvC;MACF;IAAA;MAAArJ,GAAA;MAAAvB,KAAA,EAEA,SAAA8K,mBACE7C,SAAwD,EACxD;QACA,IAAI,CAACD,qBAAqB,CAACC,SAAS,CAAC;QACrC,IAAI,CAACrB,qBAAqB,EAAE;QAC5B,IAAI,CAACC,kBAAkB,EAAE;MAC3B;IAAA;MAAAtF,GAAA;MAAAvB,KAAA,EAyDA,SAAA+K,wBACEC,UAAyD,EAChC;QAAA,IAAAC,MAAA;QACzB,IAAM9I,KAA8B,GAAG,CAAC,CAAC;QAAA,IAAA+I,MAAA,YAAAA,OAAA,EACX;UAC5B,IAAMlL,KAAK,GAAGgL,UAAU,CAACzJ,GAAG,CAAC;UAC7B,IAAIA,GAAG,KAAK,OAAO,EAAE;YACnB,IAAM4J,SAAS,GAAGH,UAAU,CAACjK,KAAK;YAClC,IAAMF,MAAM,GAAGX,YAAY,CAAaiL,SAAS,WAATA,SAAS,GAAI,EAAE,CAAC;YACxD,IAAMC,cAA0B,GAAGvK,MAAM,CAAC6C,GAAG,CAAE,UAAA3C,KAAK,EAAK;cACvD,IAAIA,KAAK,IAAIA,KAAK,CAACC,eAAe,EAAE;gBAElCD,KAAK,CAACK,QAAQ,CAAC0I,GAAG,CAACmB,MAAI,CAAC;gBACxB,IAAIA,MAAI,CAACI,cAAc,EAAE;kBACvBJ,MAAI,CAACK,YAAY,GAAAvB,aAAA,CAAAA,aAAA,KACZhJ,KAAK,CAACiJ,OAAO,CAAChK,KAAK,GACnBZ,iBAAiB,CAAa2B,KAAK,CAACiJ,OAAO,CAACuB,OAAO,EACvD;gBACH;gBACA,OAAON,MAAI,CAACK,YAAY;cAC1B,CAAC,MAAM,IAAIxJ,eAAe,CAACf,KAAK,CAAC,EAAE;gBACjC,IAAIkK,MAAI,CAACI,cAAc,EAAE;kBACvB,OAAOnI,oBAAoB,CAACnC,KAAK,CAAC;gBACpC;gBACA,IAAMyK,QAAoB,GAAG,CAAC,CAAC;gBAC/B,SAAAC,KAAA,IAAgC1J,MAAM,CAACQ,OAAO,CAACxB,KAAK,CAAC,EAAE;kBAAA,IAAA2K,KAAA,GAAAjJ,cAAA,CAAAgJ,KAAA;kBAAA,IAA3ClK,KAAG,GAAAmK,KAAA;kBAAA,IAAEzJ,UAAU,GAAAyJ,KAAA;kBACzB,IACE,CAAC/L,aAAa,CAACsC,UAAU,CAAC,IAC1B,EAAEV,KAAG,KAAK,WAAW,IAAIG,sBAAsB,CAACO,UAAU,CAAC,CAAC,EAC5D;oBACAuJ,QAAQ,CAACjK,KAAG,CAAC,GAAGU,UAAU;kBAC5B;gBACF;gBACA,OAAOuJ,QAAQ;cACjB,CAAC,MAAM;gBACL,OAAOzK,KAAK;cACd;YACF,CAAC,CAAC;YACFoB,KAAK,CAACZ,GAAG,CAAC,GAAGjD,UAAU,CAACqN,OAAO,CAACP,cAAc,CAAC;UACjD,CAAC,MAAM,IAAI7J,GAAG,KAAK,eAAe,EAAE;YAClC,IAAMqK,YAAY,GAAGZ,UAAU,CAACnD,aAE/B;YACD,IAAI+D,YAAY,CAAC5B,OAAO,KAAKvI,SAAS,EAAE;cACtCM,MAAM,CAACC,IAAI,CAAC4J,YAAY,CAAC5B,OAAO,CAAChK,KAAK,CAAC,CAACS,OAAO,CAAE,UAAAc,GAAG,EAAK;gBAAA,IAAAsK,qBAAA,EAAAC,qBAAA;gBACvD3J,KAAK,CAACZ,GAAG,CAAC,IAAAsK,qBAAA,GAAGD,YAAY,CAAC5B,OAAO,cAAA6B,qBAAA,uBAApBA,qBAAA,CAAsB7L,KAAK,CAACuB,GAAG,CAAC;gBAC7C,CAAAuK,qBAAA,GAAAF,YAAY,CAACxK,QAAQ,cAAA0K,qBAAA,uBAArBA,qBAAA,CAAuBhC,GAAG,CAACmB,MAAI,CAAC;cAClC,CAAC,CAAC;YACJ;UACF,CAAC,MAAM,IACL3J,GAAG,CAAC,SAAS,EAAEtB,KAAK,CAAC,IACrBA,KAAK,CAACoH,OAAO,YAAY7I,mBAAmB,EAC5C;YACA,IAAIyB,KAAK,CAACoH,OAAO,CAAC2E,UAAU,CAAClJ,MAAM,GAAG,CAAC,EAAE;cACvC7C,KAAK,CAACoH,OAAO,CAAC2E,UAAU,CAACtL,OAAO,CAAE,UAAAuL,SAAS,EAAK;gBAC9C7J,KAAK,CAAC6J,SAAS,CAAC,GAAG1K,GAAG,CAAC,WAAW,EAAEtB,KAAK,CAACoH,OAAO,CAAC,GAC7CpH,KAAK,CAACoH,OAAO,CAAC6E,SAAS,CACtBD,SAAS,CACV,GACDpM,aAAa;cACnB,CAAC,CAAC;YACJ,CAAC,MAAM;cACLuC,KAAK,CAACZ,GAAG,CAAC,GAAG3B,aAAa;YAC5B;UACF,CAAC,MAAM,IAAID,aAAa,CAACK,KAAK,CAAC,EAAE;YAC/B,IAAIiL,MAAI,CAACI,cAAc,EAAE;cACvBlJ,KAAK,CAACZ,GAAG,CAAC,GAAIvB,KAAK,CAAsBA,KAAK;YAChD;UACF,CAAC,MAAM,IACLuB,GAAG,KAAK,6BAA6B,IACrC,CAACrC,gBAAgB,EAAE,EACnB;YACAiD,KAAK,CAACZ,GAAG,CAAC,GAAGvB,KAAK;UACpB;QACF;QAtEA,KAAK,IAAMuB,GAAG,IAAIyJ,UAAU;UAAAE,MAAA;QAAA;QAuE5B,OAAO/I,KAAK;MACd;IAAA;MAAAZ,GAAA;MAAAvB,KAAA,EAEA,SAAAkM,OAAA,EAAS;QACP,IAAM/J,KAAK,GAAG,IAAI,CAAC4I,uBAAuB,CAAC,IAAI,CAAC5I,KAAK,CAAC;QACtD,IAAIlD,MAAM,EAAE,EAAE;UACZkD,KAAK,CAACiE,aAAa,GAAG,IAAI,CAACA,aAAa;QAC1C;QAEA,IAAI,IAAI,CAACiF,cAAc,EAAE;UACvB,IAAI,CAACA,cAAc,GAAG,KAAK;QAC7B;QAEA,IAAMc,aAAa,GAAG9N,QAAQ,CAAC+N,MAAM,CAAC;UACpCC,GAAG,EAAE,CAAC,CAAC;UACPC,OAAO,EAAE;YAAEC,WAAW,EAAE;UAAM;QAChC,CAAC,CAAC;QACF,OACEpO,KAAA,CAAAqO,aAAA,CAACrI,SAAS,EAAAsI,QAAA,KAAKtK,KAAK;UAAEkD,GAAG,EAAE,IAAI,CAACqH;QAAiB,GAAKP,aAAa,EAAI;MAE3E;IAAA;IAAA,OAAA3H,iBAAA;EAAA,EAje8BrG,KAAK,CAACgG,SAAS;EAke9Ca,eAAA,CAleKR,iBAAiB;EAoevBA,iBAAiB,CAACmI,WAAW,GAAI,qBAC/BxI,SAAS,CAACwI,WAAW,IAAIxI,SAAS,CAACI,IAAI,IAAI,WAC5C,GAAE;EAEH,OAAOpG,KAAK,CAACyO,UAAU,CAAY,UAACzK,KAAK,EAAEkD,GAAG,EAAK;IACjD,OACElH,KAAA,CAAAqO,aAAA,CAAChI,iBAAiB,EAAAiI,QAAA,KACZtK,KAAK,EACJkD,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG;MAAEF,YAAY,EAAEE;IAAI,CAAC,EAChD;EAEN,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}