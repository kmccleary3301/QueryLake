{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar InteractionManager = function () {\n  function InteractionManager() {\n    _classCallCheck(this, InteractionManager);\n    _defineProperty(this, \"waitForRelations\", new Map());\n    _defineProperty(this, \"simultaneousRelations\", new Map());\n  }\n  _createClass(InteractionManager, [{\n    key: \"configureInteractions\",\n    value: function configureInteractions(handler, config) {\n      this.dropRelationsForHandlerWithTag(handler.getTag());\n      if (config.waitFor) {\n        var waitFor = [];\n        config.waitFor.forEach(function (otherHandler) {\n          if (typeof otherHandler === 'number') {\n            waitFor.push(otherHandler);\n          } else {\n            waitFor.push(otherHandler.handlerTag);\n          }\n        });\n        this.waitForRelations.set(handler.getTag(), waitFor);\n      }\n      if (config.simultaneousHandlers) {\n        var simultaneousHandlers = [];\n        config.simultaneousHandlers.forEach(function (otherHandler) {\n          if (typeof otherHandler === 'number') {\n            simultaneousHandlers.push(otherHandler);\n          } else {\n            simultaneousHandlers.push(otherHandler.handlerTag);\n          }\n        });\n        this.simultaneousRelations.set(handler.getTag(), simultaneousHandlers);\n      }\n    }\n  }, {\n    key: \"shouldWaitForHandlerFailure\",\n    value: function shouldWaitForHandlerFailure(handler, otherHandler) {\n      var waitFor = this.waitForRelations.get(handler.getTag());\n      if (!waitFor) {\n        return false;\n      }\n      var shouldWait = false;\n      waitFor.forEach(function (tag) {\n        if (tag === otherHandler.getTag()) {\n          shouldWait = true;\n          return;\n        }\n      });\n      return shouldWait;\n    }\n  }, {\n    key: \"shouldRecognizeSimultaneously\",\n    value: function shouldRecognizeSimultaneously(handler, otherHandler) {\n      var simultaneousHandlers = this.simultaneousRelations.get(handler.getTag());\n      if (!simultaneousHandlers) {\n        return false;\n      }\n      var shouldRecognizeSimultaneously = false;\n      simultaneousHandlers.forEach(function (tag) {\n        if (tag === otherHandler.getTag()) {\n          shouldRecognizeSimultaneously = true;\n          return;\n        }\n      });\n      return shouldRecognizeSimultaneously;\n    }\n  }, {\n    key: \"shouldRequireHandlerToWaitForFailure\",\n    value: function shouldRequireHandlerToWaitForFailure(_handler, _otherHandler) {\n      return false;\n    }\n  }, {\n    key: \"shouldHandlerBeCancelledBy\",\n    value: function shouldHandlerBeCancelledBy(_handler, _otherHandler) {\n      return false;\n    }\n  }, {\n    key: \"dropRelationsForHandlerWithTag\",\n    value: function dropRelationsForHandlerWithTag(handlerTag) {\n      this.waitForRelations.delete(handlerTag);\n      this.simultaneousRelations.delete(handlerTag);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.waitForRelations.clear();\n      this.simultaneousRelations.clear();\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!this.instance) {\n        this.instance = new InteractionManager();\n      }\n      return this.instance;\n    }\n  }]);\n  return InteractionManager;\n}();\nexport { InteractionManager as default };\n_defineProperty(InteractionManager, \"instance\", void 0);","map":{"version":3,"names":["InteractionManager","_classCallCheck","_defineProperty","Map","_createClass","key","value","configureInteractions","handler","config","dropRelationsForHandlerWithTag","getTag","waitFor","forEach","otherHandler","push","handlerTag","waitForRelations","set","simultaneousHandlers","simultaneousRelations","shouldWaitForHandlerFailure","get","shouldWait","tag","shouldRecognizeSimultaneously","shouldRequireHandlerToWaitForFailure","_handler","_otherHandler","shouldHandlerBeCancelledBy","delete","reset","clear","getInstance","instance","default"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\InteractionManager.ts"],"sourcesContent":["import GestureHandler from '../handlers/GestureHandler';\nimport { Config, Handler } from '../interfaces';\n\nexport default class InteractionManager {\n  private static instance: InteractionManager;\n  private readonly waitForRelations: Map<number, number[]> = new Map();\n  private readonly simultaneousRelations: Map<number, number[]> = new Map();\n\n  // Private becaues of singleton\n  // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  public configureInteractions(handler: GestureHandler, config: Config) {\n    this.dropRelationsForHandlerWithTag(handler.getTag());\n\n    if (config.waitFor) {\n      const waitFor: number[] = [];\n      config.waitFor.forEach((otherHandler: Handler): void => {\n        // New API reference\n        if (typeof otherHandler === 'number') {\n          waitFor.push(otherHandler);\n        } else {\n          // Old API reference\n          waitFor.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.waitForRelations.set(handler.getTag(), waitFor);\n    }\n\n    if (config.simultaneousHandlers) {\n      const simultaneousHandlers: number[] = [];\n      config.simultaneousHandlers.forEach((otherHandler: Handler): void => {\n        if (typeof otherHandler === 'number') {\n          simultaneousHandlers.push(otherHandler);\n        } else {\n          simultaneousHandlers.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.simultaneousRelations.set(handler.getTag(), simultaneousHandlers);\n    }\n  }\n\n  public shouldWaitForHandlerFailure(\n    handler: GestureHandler,\n    otherHandler: GestureHandler\n  ): boolean {\n    const waitFor: number[] | undefined = this.waitForRelations.get(\n      handler.getTag()\n    );\n    if (!waitFor) {\n      return false;\n    }\n\n    let shouldWait = false;\n\n    waitFor.forEach((tag: number): void => {\n      if (tag === otherHandler.getTag()) {\n        shouldWait = true;\n        return; //Returns from callback\n      }\n    });\n\n    return shouldWait;\n  }\n\n  public shouldRecognizeSimultaneously(\n    handler: GestureHandler,\n    otherHandler: GestureHandler\n  ): boolean {\n    const simultaneousHandlers: number[] | undefined =\n      this.simultaneousRelations.get(handler.getTag());\n    if (!simultaneousHandlers) {\n      return false;\n    }\n\n    let shouldRecognizeSimultaneously = false;\n\n    simultaneousHandlers.forEach((tag: number): void => {\n      if (tag === otherHandler.getTag()) {\n        shouldRecognizeSimultaneously = true;\n        return;\n      }\n    });\n\n    return shouldRecognizeSimultaneously;\n  }\n\n  public shouldRequireHandlerToWaitForFailure(\n    _handler: GestureHandler,\n    _otherHandler: GestureHandler\n  ): boolean {\n    //TODO: Implement logic\n    return false;\n  }\n\n  public shouldHandlerBeCancelledBy(\n    _handler: GestureHandler,\n    _otherHandler: GestureHandler\n  ): boolean {\n    //TODO: Implement logic\n    return false;\n  }\n\n  public dropRelationsForHandlerWithTag(handlerTag: number): void {\n    this.waitForRelations.delete(handlerTag);\n    this.simultaneousRelations.delete(handlerTag);\n  }\n\n  public reset() {\n    this.waitForRelations.clear();\n    this.simultaneousRelations.clear();\n  }\n\n  public static getInstance(): InteractionManager {\n    if (!this.instance) {\n      this.instance = new InteractionManager();\n    }\n\n    return this.instance;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}