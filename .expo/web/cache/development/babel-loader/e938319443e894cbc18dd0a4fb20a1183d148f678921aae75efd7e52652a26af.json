{"ast":null,"code":"import { isJest } from \"./PlatformChecker\";\nimport { runOnUI } from \"./threads\";\nimport { isSharedValue } from \"./utils\";\nvar IS_JEST = isJest();\nvar _worklet_10153940359385_init_data = {\n  code: \"function createMapperRegistry() {\\n  const {\\n    IS_JEST,\\n    isSharedValue\\n  } = this._closure;\\n  const mappers = new Map();\\n  let sortedMappers = [];\\n  let runRequested = false;\\n  let processingMappers = false;\\n  function updateMappersOrder() {\\n    const pre = new Map();\\n    mappers.forEach(function (mapper) {\\n      if (mapper.outputs) {\\n        for (const output of mapper.outputs) {\\n          const preMappers = pre.get(output);\\n          if (preMappers === undefined) {\\n            pre.set(output, [mapper]);\\n          } else {\\n            preMappers.push(mapper);\\n          }\\n        }\\n      }\\n    });\\n    const visited = new Set();\\n    const newOrder = [];\\n    function dfs(mapper) {\\n      visited.add(mapper);\\n      for (const input of mapper.inputs) {\\n        const preMappers = pre.get(input);\\n        if (preMappers) {\\n          for (const preMapper of preMappers) {\\n            if (!visited.has(preMapper)) {\\n              dfs(preMapper);\\n            }\\n          }\\n        }\\n      }\\n      newOrder.push(mapper);\\n    }\\n    mappers.forEach(function (mapper) {\\n      if (!visited.has(mapper)) {\\n        dfs(mapper);\\n      }\\n    });\\n    sortedMappers = newOrder;\\n  }\\n  function mapperRun() {\\n    runRequested = false;\\n    if (processingMappers) {\\n      return;\\n    }\\n    processingMappers = true;\\n    if (mappers.size !== sortedMappers.length) {\\n      updateMappersOrder();\\n    }\\n    for (const mapper of sortedMappers) {\\n      if (mapper.dirty) {\\n        mapper.dirty = false;\\n        mapper.worklet();\\n      }\\n    }\\n    processingMappers = false;\\n  }\\n  function maybeRequestUpdates() {\\n    if (IS_JEST) {\\n      mapperRun();\\n    } else if (!runRequested) {\\n      if (processingMappers) {\\n        requestAnimationFrame(mapperRun);\\n      } else {\\n        queueMicrotask(mapperRun);\\n      }\\n      runRequested = true;\\n    }\\n  }\\n  function extractInputs(inputs, resultArray) {\\n    if (Array.isArray(inputs)) {\\n      for (const input of inputs) {\\n        input && extractInputs(input, resultArray);\\n      }\\n    } else if (isSharedValue(inputs)) {\\n      resultArray.push(inputs);\\n    } else if (Object.getPrototypeOf(inputs) === Object.prototype) {\\n      for (const element of Object.values(inputs)) {\\n        element && extractInputs(element, resultArray);\\n      }\\n    }\\n    return resultArray;\\n  }\\n  return {\\n    start: function (mapperID, worklet, inputs, outputs) {\\n      const mapper = {\\n        id: mapperID,\\n        dirty: true,\\n        worklet: worklet,\\n        inputs: extractInputs(inputs, []),\\n        outputs: outputs\\n      };\\n      mappers.set(mapper.id, mapper);\\n      sortedMappers = [];\\n      for (const sv of mapper.inputs) {\\n        sv.addListener(mapper.id, function () {\\n          mapper.dirty = true;\\n          maybeRequestUpdates();\\n        });\\n      }\\n      maybeRequestUpdates();\\n    },\\n    stop: function (mapperID) {\\n      const mapper = mappers.get(mapperID);\\n      if (mapper) {\\n        mappers.delete(mapper.id);\\n        sortedMappers = [];\\n        for (const sv of mapper.inputs) {\\n          sv.removeListener(mapper.id);\\n        }\\n      }\\n    }\\n  };\\n}\",\n  location: \"C:\\\\alt\\\\projects\\\\school\\\\3035\\\\QueryLake\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\mappers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"createMapperRegistry\\\",\\\"IS_JEST\\\",\\\"isSharedValue\\\",\\\"_closure\\\",\\\"mappers\\\",\\\"Map\\\",\\\"sortedMappers\\\",\\\"runRequested\\\",\\\"processingMappers\\\",\\\"updateMappersOrder\\\",\\\"pre\\\",\\\"forEach\\\",\\\"mapper\\\",\\\"outputs\\\",\\\"output\\\",\\\"preMappers\\\",\\\"get\\\",\\\"undefined\\\",\\\"set\\\",\\\"push\\\",\\\"visited\\\",\\\"Set\\\",\\\"newOrder\\\",\\\"dfs\\\",\\\"add\\\",\\\"input\\\",\\\"inputs\\\",\\\"preMapper\\\",\\\"has\\\",\\\"mapperRun\\\",\\\"size\\\",\\\"length\\\",\\\"dirty\\\",\\\"worklet\\\",\\\"maybeRequestUpdates\\\",\\\"requestAnimationFrame\\\",\\\"queueMicrotask\\\",\\\"extractInputs\\\",\\\"resultArray\\\",\\\"Array\\\",\\\"isArray\\\",\\\"Object\\\",\\\"getPrototypeOf\\\",\\\"prototype\\\",\\\"element\\\",\\\"values\\\",\\\"start\\\",\\\"mapperID\\\",\\\"id\\\",\\\"sv\\\",\\\"addListener\\\",\\\"stop\\\",\\\"delete\\\",\\\"removeListener\\\"],\\\"sources\\\":[\\\"C:/alt/projects/school/3035/QueryLake/node_modules/react-native-reanimated/lib/module/reanimated2/mappers.js\\\"],\\\"mappings\\\":\\\"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\\\"}\"\n};\nexport var createMapperRegistry = function () {\n  var _e = [new global.Error(), -3, -27];\n  var _f = function _f() {\n    var mappers = new Map();\n    var sortedMappers = [];\n    var runRequested = false;\n    var processingMappers = false;\n    function updateMappersOrder() {\n      var pre = new Map();\n      mappers.forEach(function (mapper) {\n        if (mapper.outputs) {\n          for (var output of mapper.outputs) {\n            var preMappers = pre.get(output);\n            if (preMappers === undefined) {\n              pre.set(output, [mapper]);\n            } else {\n              preMappers.push(mapper);\n            }\n          }\n        }\n      });\n      var visited = new Set();\n      var newOrder = [];\n      function dfs(mapper) {\n        visited.add(mapper);\n        for (var input of mapper.inputs) {\n          var preMappers = pre.get(input);\n          if (preMappers) {\n            for (var preMapper of preMappers) {\n              if (!visited.has(preMapper)) {\n                dfs(preMapper);\n              }\n            }\n          }\n        }\n        newOrder.push(mapper);\n      }\n      mappers.forEach(function (mapper) {\n        if (!visited.has(mapper)) {\n          dfs(mapper);\n        }\n      });\n      sortedMappers = newOrder;\n    }\n    function mapperRun() {\n      runRequested = false;\n      if (processingMappers) {\n        return;\n      }\n      processingMappers = true;\n      if (mappers.size !== sortedMappers.length) {\n        updateMappersOrder();\n      }\n      for (var mapper of sortedMappers) {\n        if (mapper.dirty) {\n          mapper.dirty = false;\n          mapper.worklet();\n        }\n      }\n      processingMappers = false;\n    }\n    function maybeRequestUpdates() {\n      if (IS_JEST) {\n        mapperRun();\n      } else if (!runRequested) {\n        if (processingMappers) {\n          requestAnimationFrame(mapperRun);\n        } else {\n          queueMicrotask(mapperRun);\n        }\n        runRequested = true;\n      }\n    }\n    function extractInputs(inputs, resultArray) {\n      if (Array.isArray(inputs)) {\n        for (var input of inputs) {\n          input && extractInputs(input, resultArray);\n        }\n      } else if (isSharedValue(inputs)) {\n        resultArray.push(inputs);\n      } else if (Object.getPrototypeOf(inputs) === Object.prototype) {\n        for (var element of Object.values(inputs)) {\n          element && extractInputs(element, resultArray);\n        }\n      }\n      return resultArray;\n    }\n    return {\n      start: function start(mapperID, worklet, inputs, outputs) {\n        var mapper = {\n          id: mapperID,\n          dirty: true,\n          worklet: worklet,\n          inputs: extractInputs(inputs, []),\n          outputs: outputs\n        };\n        mappers.set(mapper.id, mapper);\n        sortedMappers = [];\n        for (var sv of mapper.inputs) {\n          sv.addListener(mapper.id, function () {\n            mapper.dirty = true;\n            maybeRequestUpdates();\n          });\n        }\n        maybeRequestUpdates();\n      },\n      stop: function stop(mapperID) {\n        var mapper = mappers.get(mapperID);\n        if (mapper) {\n          mappers.delete(mapper.id);\n          sortedMappers = [];\n          for (var sv of mapper.inputs) {\n            sv.removeListener(mapper.id);\n          }\n        }\n      }\n    };\n  };\n  _f._closure = {\n    IS_JEST: IS_JEST,\n    isSharedValue: isSharedValue\n  };\n  _f.__initData = _worklet_10153940359385_init_data;\n  _f.__workletHash = 10153940359385;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar MAPPER_ID = 9999;\nvar _worklet_10884867408878_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    createMapperRegistry,\\n    mapperID,\\n    worklet,\\n    inputs,\\n    outputs\\n  } = this._closure;\\n  let mapperRegistry = global.__mapperRegistry;\\n  if (mapperRegistry === undefined) {\\n    mapperRegistry = global.__mapperRegistry = createMapperRegistry();\\n  }\\n  mapperRegistry.start(mapperID, worklet, inputs, outputs);\\n}\",\n  location: \"C:\\\\alt\\\\projects\\\\school\\\\3035\\\\QueryLake\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\mappers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"createMapperRegistry\\\",\\\"mapperID\\\",\\\"worklet\\\",\\\"inputs\\\",\\\"outputs\\\",\\\"_closure\\\",\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"undefined\\\",\\\"start\\\"],\\\"sources\\\":[\\\"C:/alt/projects/school/3035/QueryLake/node_modules/react-native-reanimated/lib/module/reanimated2/mappers.js\\\"],\\\"mappings\\\":\\\"AAuKU,SAAAA,SAAMA,CAAA;EAAA;IAAAC,oBAAA;IAAAC,QAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC;EAAA,SAAAC,QAAA;EACZ,IAAIC,cAAc,GAAGC,MAAM,CAACC,gBAAgB;EAC5C,IAAIF,cAAc,KAAKG,SAAS,EAAE;IAChCH,cAAc,GAAGC,MAAM,CAACC,gBAAgB,GAAGR,oBAAoB,CAAC,CAAC;EACnE;EACAM,cAAc,CAACI,KAAK,CAACT,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,CAAC;AAC1D\\\"}\"\n};\nexport function startMapper(worklet) {\n  var inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var mapperID = MAPPER_ID += 1;\n  runOnUI(function () {\n    var _e = [new global.Error(), -6, -27];\n    var _f = function _f() {\n      var mapperRegistry = global.__mapperRegistry;\n      if (mapperRegistry === undefined) {\n        mapperRegistry = global.__mapperRegistry = createMapperRegistry();\n      }\n      mapperRegistry.start(mapperID, worklet, inputs, outputs);\n    };\n    _f._closure = {\n      createMapperRegistry: createMapperRegistry,\n      mapperID: mapperID,\n      worklet: worklet,\n      inputs: inputs,\n      outputs: outputs\n    };\n    _f.__initData = _worklet_10884867408878_init_data;\n    _f.__workletHash = 10884867408878;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }())();\n  return mapperID;\n}\nvar _worklet_13611698491048_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    mapperID\\n  } = this._closure;\\n  const mapperRegistry = global.__mapperRegistry;\\n  mapperRegistry === null || mapperRegistry === void 0 ? void 0 : mapperRegistry.stop(mapperID);\\n}\",\n  location: \"C:\\\\alt\\\\projects\\\\school\\\\3035\\\\QueryLake\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\mappers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"mapperID\\\",\\\"_closure\\\",\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"stop\\\"],\\\"sources\\\":[\\\"C:/alt/projects/school/3035/QueryLake/node_modules/react-native-reanimated/lib/module/reanimated2/mappers.js\\\"],\\\"mappings\\\":\\\"AAiLU,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EACZ,MAAMC,cAAc,GAAGC,MAAM,CAACC,gBAAgB;EAC9CF,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACG,IAAI,CAACL,QAAQ,CAAC;AAC/F\\\"}\"\n};\nexport function stopMapper(mapperID) {\n  runOnUI(function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f() {\n      var mapperRegistry = global.__mapperRegistry;\n      mapperRegistry === null || mapperRegistry === void 0 ? void 0 : mapperRegistry.stop(mapperID);\n    };\n    _f._closure = {\n      mapperID: mapperID\n    };\n    _f.__initData = _worklet_13611698491048_init_data;\n    _f.__workletHash = 13611698491048;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }())();\n}","map":{"version":3,"names":["isJest","runOnUI","isSharedValue","IS_JEST","_worklet_10153940359385_init_data","code","location","sourceMap","createMapperRegistry","_e","global","Error","_f","mappers","Map","sortedMappers","runRequested","processingMappers","updateMappersOrder","pre","forEach","mapper","outputs","output","preMappers","get","undefined","set","push","visited","Set","newOrder","dfs","add","input","inputs","preMapper","has","mapperRun","size","length","dirty","worklet","maybeRequestUpdates","requestAnimationFrame","queueMicrotask","extractInputs","resultArray","Array","isArray","Object","getPrototypeOf","prototype","element","values","start","mapperID","id","sv","addListener","stop","delete","removeListener","_closure","__initData","__workletHash","__stackDetails","__version","MAPPER_ID","_worklet_10884867408878_init_data","startMapper","arguments","mapperRegistry","__mapperRegistry","_worklet_13611698491048_init_data","stopMapper"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\mappers.ts"],"sourcesContent":["import { SharedValue } from './commonTypes';\nimport { isJest } from './PlatformChecker';\nimport { runOnUI } from './threads';\nimport { isSharedValue } from './utils';\n\nconst IS_JEST = isJest();\n\nexport type Mapper = {\n  id: number;\n  dirty: boolean;\n  worklet: () => void;\n  inputs: SharedValue<any>[];\n  outputs?: SharedValue<any>[];\n};\n\nexport function createMapperRegistry() {\n  'worklet';\n  const mappers = new Map();\n  let sortedMappers: Mapper[] = [];\n\n  let runRequested = false;\n  let processingMappers = false;\n\n  function updateMappersOrder() {\n    // sort mappers topologically\n    // the algorithm here takes adventage of a fact that the topological order\n    // of a transposed graph is a reverse topological order of the original graph\n    // The graph in our case consists of mappers and an edge between two mappers\n    // A and B exists if there is a shared value that's on A's output lists and on\n    // B's input list.\n    //\n    // We don't need however to calculate that graph as it is easier to work with\n    // the transposed version of it that can be calculated ad-hoc. For the transposed\n    // version to be traversed we use \"pre\" map that maps share value to mappers that\n    // output that shared value. Then we can infer all the outgoing edges for a given\n    // mapper simply by scanning it's input list and checking if any of the shared values\n    // from that list exists in the \"pre\" map. If they do, then we have an edge between\n    // that mapper and the mappers from the \"pre\" list for the given shared value.\n    //\n    // For topological sorting we use a dfs-based approach that requires the graph to\n    // be traversed in dfs order and each node after being processed lands at the\n    // beginning of the topological order list. Since we traverse a transposed graph,\n    // instead of reversing that order we can use a normal array and push processed\n    // mappers to the end. There is no need to reverse that array after we are done.\n    const pre = new Map(); // map from sv -> mapper that outputs that sv\n    mappers.forEach((mapper) => {\n      if (mapper.outputs) {\n        for (const output of mapper.outputs) {\n          const preMappers = pre.get(output);\n          if (preMappers === undefined) {\n            pre.set(output, [mapper]);\n          } else {\n            preMappers.push(mapper);\n          }\n        }\n      }\n    });\n    const visited = new Set();\n    const newOrder: Mapper[] = [];\n    function dfs(mapper: Mapper) {\n      visited.add(mapper);\n      for (const input of mapper.inputs) {\n        const preMappers = pre.get(input);\n        if (preMappers) {\n          for (const preMapper of preMappers) {\n            if (!visited.has(preMapper)) {\n              dfs(preMapper);\n            }\n          }\n        }\n      }\n      newOrder.push(mapper);\n    }\n    mappers.forEach((mapper) => {\n      if (!visited.has(mapper)) {\n        dfs(mapper);\n      }\n    });\n    sortedMappers = newOrder;\n  }\n\n  function mapperRun() {\n    runRequested = false;\n    if (processingMappers) {\n      return;\n    }\n    processingMappers = true;\n    if (mappers.size !== sortedMappers.length) {\n      updateMappersOrder();\n    }\n    for (const mapper of sortedMappers) {\n      if (mapper.dirty) {\n        mapper.dirty = false;\n        mapper.worklet();\n      }\n    }\n    processingMappers = false;\n  }\n\n  function maybeRequestUpdates() {\n    if (IS_JEST) {\n      // On Jest environment we avoid using queueMicrotask as that'd require test\n      // to advance the clock manually. This on other hand would require tests\n      // to know how many times mappers need to run. As we don't want tests to\n      // make any assumptions on that number it is easier to execute mappers\n      // immediately for testing purposes and only expect test to advance timers\n      // if they want to make any assertions on the effects of animations being run.\n      mapperRun();\n    } else if (!runRequested) {\n      if (processingMappers) {\n        // In general, we should avoid having mappers trigger updates as this may\n        // result in unpredictable behavior. Specifically, the updated value can\n        // be read by mappers that run later in the same frame but previous mappers\n        // would access the old value. Updating mappers during the mapper-run phase\n        // breaks the order in which we should execute the mappers. However, doing\n        // that is still a possibility and there are some instances where people use\n        // the API in that way, hence we need to prevent mapper-run phase falling into\n        // an infinite loop. We do that by detecting when mapper-run is requested while\n        // we are already in mapper-run phase, and in that case we use `requestAnimationFrame`\n        // instead of `queueMicrotask` which will schedule mapper run for the next\n        // frame instead of queuing another set of updates in the same frame.\n        requestAnimationFrame(mapperRun);\n      } else {\n        queueMicrotask(mapperRun);\n      }\n      runRequested = true;\n    }\n  }\n\n  function extractInputs(\n    inputs: any,\n    resultArray: SharedValue<any>[]\n  ): SharedValue<any>[] {\n    if (Array.isArray(inputs)) {\n      for (const input of inputs) {\n        input && extractInputs(input, resultArray);\n      }\n    } else if (isSharedValue(inputs)) {\n      resultArray.push(inputs);\n    } else if (Object.getPrototypeOf(inputs) === Object.prototype) {\n      // we only extract inputs recursively from \"plain\" objects here, if object\n      // is of a derivative class (e.g. HostObject on web, or Map) we don't scan\n      // it recursively\n      for (const element of Object.values(inputs)) {\n        element && extractInputs(element, resultArray);\n      }\n    }\n    return resultArray;\n  }\n\n  return {\n    start: (\n      mapperID: number,\n      worklet: () => void,\n      inputs: SharedValue<any>[],\n      outputs?: SharedValue<any>[]\n    ) => {\n      const mapper = {\n        id: mapperID,\n        dirty: true,\n        worklet,\n        inputs: extractInputs(inputs, []),\n        outputs,\n      };\n      mappers.set(mapper.id, mapper);\n      sortedMappers = [];\n      for (const sv of mapper.inputs) {\n        sv.addListener(mapper.id, () => {\n          mapper.dirty = true;\n          maybeRequestUpdates();\n        });\n      }\n      maybeRequestUpdates();\n    },\n    stop: (mapperID: number) => {\n      const mapper = mappers.get(mapperID);\n      if (mapper) {\n        mappers.delete(mapper.id);\n        sortedMappers = [];\n        for (const sv of mapper.inputs) {\n          sv.removeListener(mapper.id);\n        }\n      }\n    },\n  };\n}\n\nlet MAPPER_ID = 9999;\n\nexport function startMapper(\n  worklet: () => void,\n  inputs: any[] = [],\n  outputs: any[] = []\n): number {\n  const mapperID = (MAPPER_ID += 1);\n\n  runOnUI(() => {\n    let mapperRegistry = global.__mapperRegistry;\n    if (mapperRegistry === undefined) {\n      mapperRegistry = global.__mapperRegistry = createMapperRegistry();\n    }\n    mapperRegistry.start(mapperID, worklet, inputs, outputs);\n  })();\n\n  return mapperID;\n}\n\nexport function stopMapper(mapperID: number): void {\n  runOnUI(() => {\n    const mapperRegistry = global.__mapperRegistry;\n    mapperRegistry?.stop(mapperID);\n  })();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}