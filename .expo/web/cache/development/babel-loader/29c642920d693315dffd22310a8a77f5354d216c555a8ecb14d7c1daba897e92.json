{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport GestureHandler from \"./GestureHandler\";\nimport { TEST_MAX_IF_NOT_NAN } from \"./utils\";\nvar DiscreteGestureHandler = function (_GestureHandler) {\n  _inherits(DiscreteGestureHandler, _GestureHandler);\n  var _super = _createSuper(DiscreteGestureHandler);\n  function DiscreteGestureHandler() {\n    _classCallCheck(this, DiscreteGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(DiscreteGestureHandler, [{\n    key: \"isDiscrete\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"shouldEnableGestureOnSetup\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, _ref2) {\n      var x = _ref.x,\n        y = _ref.y,\n        deltaX = _ref.deltaX,\n        deltaY = _ref.deltaY;\n      var maxDeltaX = _ref2.maxDeltaX,\n        maxDeltaY = _ref2.maxDeltaY,\n        maxDistSq = _ref2.maxDistSq,\n        shouldCancelWhenOutside = _ref2.shouldCancelWhenOutside;\n      if (shouldCancelWhenOutside) {\n        if (!this.isPointInView({\n          x: x,\n          y: y\n        })) {\n          return true;\n        }\n      }\n      return TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) || TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) || TEST_MAX_IF_NOT_NAN(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq);\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref3) {\n      var _ref3$center = _ref3.center,\n        x = _ref3$center.x,\n        y = _ref3$center.y;\n      var rect = this.view.getBoundingClientRect();\n      return {\n        absoluteX: x,\n        absoluteY: y,\n        x: x - rect.left,\n        y: y - rect.top\n      };\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref4, _recognizer, _ref5) {\n      var minPointers = _ref4.minPointers,\n        maxPointers = _ref4.maxPointers,\n        maxDeltaX = _ref4.maxDeltaX,\n        maxDeltaY = _ref4.maxDeltaY,\n        maxDistSq = _ref4.maxDistSq,\n        shouldCancelWhenOutside = _ref4.shouldCancelWhenOutside;\n      var pointerLength = _ref5.maxPointers,\n        center = _ref5.center,\n        deltaX = _ref5.deltaX,\n        deltaY = _ref5.deltaY;\n      var validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n      if (this.shouldFailUnderCustomCriteria(_objectSpread(_objectSpread({}, center), {}, {\n        deltaX: deltaX,\n        deltaY: deltaY\n      }), {\n        maxDeltaX: maxDeltaX,\n        maxDeltaY: maxDeltaY,\n        maxDistSq: maxDistSq,\n        shouldCancelWhenOutside: shouldCancelWhenOutside\n      }) || !validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n  }]);\n  return DiscreteGestureHandler;\n}(GestureHandler);\nexport default DiscreteGestureHandler;","map":{"version":3,"names":["GestureHandler","TEST_MAX_IF_NOT_NAN","DiscreteGestureHandler","_GestureHandler","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","value","shouldFailUnderCustomCriteria","_ref","_ref2","x","y","deltaX","deltaY","maxDeltaX","maxDeltaY","maxDistSq","shouldCancelWhenOutside","isPointInView","Math","abs","transformNativeEvent","_ref3","_ref3$center","center","rect","view","getBoundingClientRect","absoluteX","absoluteY","left","top","isGestureEnabledForEvent","_ref4","_recognizer","_ref5","minPointers","maxPointers","pointerLength","validPointerCount","_objectSpread","isGestureRunning","failed","success"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\DiscreteGestureHandler.ts"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport GestureHandler from './GestureHandler';\nimport { TEST_MAX_IF_NOT_NAN } from './utils';\n\nabstract class DiscreteGestureHandler extends GestureHandler {\n  get isDiscrete() {\n    return true;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { x, y, deltaX, deltaY }: any,\n    { maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside }: any\n  ) {\n    if (shouldCancelWhenOutside) {\n      if (!this.isPointInView({ x, y })) {\n        return true;\n      }\n    }\n    return (\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) ||\n      TEST_MAX_IF_NOT_NAN(\n        Math.abs(deltaY * deltaY + deltaX * deltaX),\n        maxDistSq\n      )\n    );\n  }\n\n  transformNativeEvent({ center: { x, y } }: any) {\n    // @ts-ignore FIXME(TS)\n    const rect = this.view!.getBoundingClientRect();\n\n    return {\n      absoluteX: x,\n      absoluteY: y,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n\n  isGestureEnabledForEvent(\n    {\n      minPointers,\n      maxPointers,\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside,\n    }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength, center, deltaX, deltaY }: any\n  ) {\n    const validPointerCount =\n      pointerLength >= minPointers && pointerLength <= maxPointers;\n\n    if (\n      this.shouldFailUnderCustomCriteria(\n        { ...center, deltaX, deltaY },\n        {\n          maxDeltaX,\n          maxDeltaY,\n          maxDistSq,\n          shouldCancelWhenOutside,\n        }\n      ) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      (!validPointerCount && this.isGestureRunning)\n    ) {\n      return { failed: true };\n    }\n\n    return { success: validPointerCount };\n  }\n}\n\nexport default DiscreteGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}