{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { getNextHandlerTag } from \"../handlersRegistry\";\nimport { isRemoteDebuggingEnabled } from \"../../utils\";\nexport var CALLBACK_TYPE = {\n  UNDEFINED: 0,\n  BEGAN: 1,\n  START: 2,\n  UPDATE: 3,\n  CHANGE: 4,\n  END: 5,\n  FINALIZE: 6,\n  TOUCHES_DOWN: 7,\n  TOUCHES_MOVE: 8,\n  TOUCHES_UP: 9,\n  TOUCHES_CANCELLED: 10\n};\nexport var Gesture = _createClass(function Gesture() {\n  _classCallCheck(this, Gesture);\n});\nvar nextGestureId = 0;\nexport var BaseGesture = function (_Gesture) {\n  _inherits(BaseGesture, _Gesture);\n  var _super = _createSuper(BaseGesture);\n  function BaseGesture() {\n    var _this;\n    _classCallCheck(this, BaseGesture);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"gestureId\", -1);\n    _defineProperty(_assertThisInitialized(_this), \"handlerTag\", -1);\n    _defineProperty(_assertThisInitialized(_this), \"handlerName\", '');\n    _defineProperty(_assertThisInitialized(_this), \"config\", {});\n    _defineProperty(_assertThisInitialized(_this), \"handlers\", {\n      gestureId: -1,\n      handlerTag: -1,\n      isWorklet: []\n    });\n    _this.gestureId = nextGestureId++;\n    _this.handlers.gestureId = _this.gestureId;\n    return _this;\n  }\n  _createClass(BaseGesture, [{\n    key: \"addDependency\",\n    value: function addDependency(key, gesture) {\n      var value = this.config[key];\n      this.config[key] = value ? Array().concat(value, gesture) : [gesture];\n    }\n  }, {\n    key: \"withRef\",\n    value: function withRef(ref) {\n      this.config.ref = ref;\n      return this;\n    }\n  }, {\n    key: \"isWorklet\",\n    value: function isWorklet(callback) {\n      return callback.__workletHash !== undefined;\n    }\n  }, {\n    key: \"onBegin\",\n    value: function onBegin(callback) {\n      this.handlers.onBegin = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart(callback) {\n      this.handlers.onStart = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(callback) {\n      this.handlers.onEnd = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onFinalize\",\n    value: function onFinalize(callback) {\n      this.handlers.onFinalize = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesDown\",\n    value: function onTouchesDown(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesDown = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesMove\",\n    value: function onTouchesMove(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesMove = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesUp\",\n    value: function onTouchesUp(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesUp = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesCancelled\",\n    value: function onTouchesCancelled(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesCancelled = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"enabled\",\n    value: function enabled(_enabled) {\n      this.config.enabled = _enabled;\n      return this;\n    }\n  }, {\n    key: \"shouldCancelWhenOutside\",\n    value: function shouldCancelWhenOutside(value) {\n      this.config.shouldCancelWhenOutside = value;\n      return this;\n    }\n  }, {\n    key: \"hitSlop\",\n    value: function hitSlop(_hitSlop) {\n      this.config.hitSlop = _hitSlop;\n      return this;\n    }\n  }, {\n    key: \"runOnJS\",\n    value: function runOnJS(_runOnJS) {\n      this.config.runOnJS = _runOnJS;\n      return this;\n    }\n  }, {\n    key: \"simultaneousWithExternalGesture\",\n    value: function simultaneousWithExternalGesture() {\n      for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n        gestures[_key] = arguments[_key];\n      }\n      for (var gesture of gestures) {\n        this.addDependency('simultaneousWith', gesture);\n      }\n      return this;\n    }\n  }, {\n    key: \"requireExternalGestureToFail\",\n    value: function requireExternalGestureToFail() {\n      for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        gestures[_key2] = arguments[_key2];\n      }\n      for (var gesture of gestures) {\n        this.addDependency('requireToFail', gesture);\n      }\n      return this;\n    }\n  }, {\n    key: \"withTestId\",\n    value: function withTestId(id) {\n      this.config.testId = id;\n      return this;\n    }\n  }, {\n    key: \"cancelsTouchesInView\",\n    value: function cancelsTouchesInView(value) {\n      this.config.cancelsTouchesInView = value;\n      return this;\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.handlerTag = getNextHandlerTag();\n      this.handlers = _objectSpread(_objectSpread({}, this.handlers), {}, {\n        handlerTag: this.handlerTag\n      });\n      if (this.config.ref) {\n        this.config.ref.current = this;\n      }\n    }\n  }, {\n    key: \"toGestureArray\",\n    value: function toGestureArray() {\n      return [this];\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare() {}\n  }, {\n    key: \"shouldUseReanimated\",\n    get: function get() {\n      return this.config.runOnJS !== true && !this.handlers.isWorklet.includes(false) && !isRemoteDebuggingEnabled();\n    }\n  }]);\n  return BaseGesture;\n}(Gesture);\nexport var ContinousBaseGesture = function (_BaseGesture) {\n  _inherits(ContinousBaseGesture, _BaseGesture);\n  var _super2 = _createSuper(ContinousBaseGesture);\n  function ContinousBaseGesture() {\n    _classCallCheck(this, ContinousBaseGesture);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(ContinousBaseGesture, [{\n    key: \"onUpdate\",\n    value: function onUpdate(callback) {\n      this.handlers.onUpdate = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.onChange = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"manualActivation\",\n    value: function manualActivation(_manualActivation) {\n      this.config.manualActivation = _manualActivation;\n      return this;\n    }\n  }]);\n  return ContinousBaseGesture;\n}(BaseGesture);","map":{"version":3,"names":["getNextHandlerTag","isRemoteDebuggingEnabled","CALLBACK_TYPE","UNDEFINED","BEGAN","START","UPDATE","CHANGE","END","FINALIZE","TOUCHES_DOWN","TOUCHES_MOVE","TOUCHES_UP","TOUCHES_CANCELLED","Gesture","_createClass","_classCallCheck","nextGestureId","BaseGesture","_Gesture","_inherits","_super","_createSuper","_this","call","_defineProperty","_assertThisInitialized","gestureId","handlerTag","isWorklet","handlers","key","value","addDependency","gesture","config","Array","concat","withRef","ref","callback","__workletHash","undefined","onBegin","onStart","onEnd","onFinalize","onTouchesDown","needsPointerData","onTouchesMove","onTouchesUp","onTouchesCancelled","enabled","shouldCancelWhenOutside","hitSlop","runOnJS","simultaneousWithExternalGesture","_len","arguments","length","gestures","_key","requireExternalGestureToFail","_len2","_key2","withTestId","id","testId","cancelsTouchesInView","initialize","_objectSpread","current","toGestureArray","prepare","get","includes","ContinousBaseGesture","_BaseGesture","_super2","apply","onUpdate","onChange","manualActivation"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\gesture.ts"],"sourcesContent":["import { FlingGestureHandlerEventPayload } from '../FlingGestureHandler';\nimport { ForceTouchGestureHandlerEventPayload } from '../ForceTouchGestureHandler';\nimport {\n  HitSlop,\n  CommonGestureConfig,\n  GestureTouchEvent,\n  GestureStateChangeEvent,\n  GestureUpdateEvent,\n} from '../gestureHandlerCommon';\nimport { getNextHandlerTag } from '../handlersRegistry';\nimport { GestureStateManagerType } from './gestureStateManager';\nimport { LongPressGestureHandlerEventPayload } from '../LongPressGestureHandler';\nimport { PanGestureHandlerEventPayload } from '../PanGestureHandler';\nimport { PinchGestureHandlerEventPayload } from '../PinchGestureHandler';\nimport { RotationGestureHandlerEventPayload } from '../RotationGestureHandler';\nimport { TapGestureHandlerEventPayload } from '../TapGestureHandler';\nimport { NativeViewGestureHandlerPayload } from '../NativeViewGestureHandler';\nimport { isRemoteDebuggingEnabled } from '../../utils';\n\nexport type GestureType =\n  | BaseGesture<Record<string, unknown>>\n  | BaseGesture<Record<string, never>>\n  | BaseGesture<TapGestureHandlerEventPayload>\n  | BaseGesture<PanGestureHandlerEventPayload>\n  | BaseGesture<LongPressGestureHandlerEventPayload>\n  | BaseGesture<RotationGestureHandlerEventPayload>\n  | BaseGesture<PinchGestureHandlerEventPayload>\n  | BaseGesture<FlingGestureHandlerEventPayload>\n  | BaseGesture<ForceTouchGestureHandlerEventPayload>\n  | BaseGesture<NativeViewGestureHandlerPayload>;\n\nexport type GestureRef =\n  | number\n  | GestureType\n  | React.RefObject<GestureType | undefined>\n  | React.RefObject<React.ComponentType | undefined>; // allow adding a ref to a gesture handler\nexport interface BaseGestureConfig\n  extends CommonGestureConfig,\n    Record<string, unknown> {\n  ref?: React.MutableRefObject<GestureType | undefined>;\n  requireToFail?: GestureRef[];\n  simultaneousWith?: GestureRef[];\n  needsPointerData?: boolean;\n  manualActivation?: boolean;\n  runOnJS?: boolean;\n  testId?: string;\n  cancelsTouchesInView?: boolean;\n}\n\ntype TouchEventHandlerType = (\n  event: GestureTouchEvent,\n  stateManager: GestureStateManagerType\n) => void;\n\nexport type HandlerCallbacks<EventPayloadT extends Record<string, unknown>> = {\n  gestureId: number;\n  handlerTag: number;\n  onBegin?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onStart?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onEnd?: (\n    event: GestureStateChangeEvent<EventPayloadT>,\n    success: boolean\n  ) => void;\n  onFinalize?: (\n    event: GestureStateChangeEvent<EventPayloadT>,\n    success: boolean\n  ) => void;\n  onUpdate?: (event: GestureUpdateEvent<EventPayloadT>) => void;\n  onChange?: (event: any) => void;\n  onTouchesDown?: TouchEventHandlerType;\n  onTouchesMove?: TouchEventHandlerType;\n  onTouchesUp?: TouchEventHandlerType;\n  onTouchesCancelled?: TouchEventHandlerType;\n  changeEventCalculator?: (\n    current: GestureUpdateEvent<Record<string, unknown>>,\n    previous?: GestureUpdateEvent<Record<string, unknown>>\n  ) => GestureUpdateEvent<Record<string, unknown>>;\n  isWorklet: boolean[];\n};\n\nexport const CALLBACK_TYPE = {\n  UNDEFINED: 0,\n  BEGAN: 1,\n  START: 2,\n  UPDATE: 3,\n  CHANGE: 4,\n  END: 5,\n  FINALIZE: 6,\n  TOUCHES_DOWN: 7,\n  TOUCHES_MOVE: 8,\n  TOUCHES_UP: 9,\n  TOUCHES_CANCELLED: 10,\n} as const;\n\n// Allow using CALLBACK_TYPE as object and type\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type CALLBACK_TYPE = typeof CALLBACK_TYPE[keyof typeof CALLBACK_TYPE];\n\nexport abstract class Gesture {\n  /**\n   * Return array of gestures, providing the same interface for creating and updating\n   * handlers, no matter which object was used to create gesture instance.\n   */\n  abstract toGestureArray(): GestureType[];\n\n  /**\n   * Assign handlerTag to the gesture instance and set ref.current (if a ref is set)\n   */\n  abstract initialize(): void;\n\n  /**\n   * Make sure that values of properties defining relations are arrays. Do any necessary\n   * preprocessing required to configure relations between handlers. Called just before\n   * updating the handler on the native side.\n   */\n  abstract prepare(): void;\n}\n\nlet nextGestureId = 0;\nexport abstract class BaseGesture<\n  EventPayloadT extends Record<string, unknown>\n> extends Gesture {\n  private gestureId = -1;\n  public handlerTag = -1;\n  public handlerName = '';\n  public config: BaseGestureConfig = {};\n  public handlers: HandlerCallbacks<EventPayloadT> = {\n    gestureId: -1,\n    handlerTag: -1,\n    isWorklet: [],\n  };\n\n  constructor() {\n    super();\n\n    // Used to check whether the gesture config has been updated when wrapping it\n    // with `useMemo`. Since every config will have a unique id, when the dependencies\n    // don't change, the config won't be recreated and the id will stay the same.\n    // If the id is different, it means that the config has changed and the gesture\n    // needs to be updated.\n    this.gestureId = nextGestureId++;\n    this.handlers.gestureId = this.gestureId;\n  }\n\n  private addDependency(\n    key: 'simultaneousWith' | 'requireToFail',\n    gesture: Exclude<GestureRef, number>\n  ) {\n    const value = this.config[key];\n    this.config[key] = value\n      ? Array<GestureRef>().concat(value, gesture)\n      : [gesture];\n  }\n\n  withRef(ref: React.MutableRefObject<GestureType | undefined>) {\n    this.config.ref = ref;\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  protected isWorklet(callback: Function) {\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    return callback.__workletHash !== undefined;\n  }\n\n  onBegin(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onBegin = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n    return this;\n  }\n\n  onStart(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onStart = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n    return this;\n  }\n\n  onEnd(\n    callback: (\n      event: GestureStateChangeEvent<EventPayloadT>,\n      success: boolean\n    ) => void\n  ) {\n    this.handlers.onEnd = callback;\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n    return this;\n  }\n\n  onFinalize(\n    callback: (\n      event: GestureStateChangeEvent<EventPayloadT>,\n      success: boolean\n    ) => void\n  ) {\n    this.handlers.onFinalize = callback;\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n    return this;\n  }\n\n  onTouchesDown(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesDown = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesMove(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesMove = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesUp(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesUp = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesCancelled(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesCancelled = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  enabled(enabled: boolean) {\n    this.config.enabled = enabled;\n    return this;\n  }\n\n  shouldCancelWhenOutside(value: boolean) {\n    this.config.shouldCancelWhenOutside = value;\n    return this;\n  }\n\n  hitSlop(hitSlop: HitSlop) {\n    this.config.hitSlop = hitSlop;\n    return this;\n  }\n\n  runOnJS(runOnJS: boolean) {\n    this.config.runOnJS = runOnJS;\n    return this;\n  }\n\n  simultaneousWithExternalGesture(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('simultaneousWith', gesture);\n    }\n    return this;\n  }\n\n  requireExternalGestureToFail(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('requireToFail', gesture);\n    }\n    return this;\n  }\n\n  withTestId(id: string) {\n    this.config.testId = id;\n    return this;\n  }\n\n  cancelsTouchesInView(value: boolean) {\n    this.config.cancelsTouchesInView = value;\n    return this;\n  }\n\n  initialize() {\n    this.handlerTag = getNextHandlerTag();\n\n    this.handlers = { ...this.handlers, handlerTag: this.handlerTag };\n\n    if (this.config.ref) {\n      this.config.ref.current = this as GestureType;\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return [this as GestureType];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  prepare() {}\n\n  get shouldUseReanimated(): boolean {\n    // use Reanimated when runOnJS isn't set explicitly,\n    // and all defined callbacks are worklets,\n    // and remote debugging is disabled\n    return (\n      this.config.runOnJS !== true &&\n      !this.handlers.isWorklet.includes(false) &&\n      !isRemoteDebuggingEnabled()\n    );\n  }\n}\n\nexport abstract class ContinousBaseGesture<\n  EventPayloadT extends Record<string, unknown>,\n  EventChangePayloadT extends Record<string, unknown>\n> extends BaseGesture<EventPayloadT> {\n  onUpdate(callback: (event: GestureUpdateEvent<EventPayloadT>) => void) {\n    this.handlers.onUpdate = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<EventPayloadT & EventChangePayloadT>\n    ) => void\n  ) {\n    this.handlers.onChange = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n    return this;\n  }\n\n  manualActivation(manualActivation: boolean) {\n    this.config.manualActivation = manualActivation;\n    return this;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AASA,SAASA,iBAAT;AAQA,SAASC,wBAAT;AA+DA,OAAO,IAAMC,aAAa,GAAG;EAC3BC,SAAS,EAAE,CADgB;EAE3BC,KAAK,EAAE,CAFoB;EAG3BC,KAAK,EAAE,CAHoB;EAI3BC,MAAM,EAAE,CAJmB;EAK3BC,MAAM,EAAE,CALmB;EAM3BC,GAAG,EAAE,CANsB;EAO3BC,QAAQ,EAAE,CAPiB;EAQ3BC,YAAY,EAAE,CARa;EAS3BC,YAAY,EAAE,CATa;EAU3BC,UAAU,EAAE,CAVe;EAW3BC,iBAAiB,EAAE;AAXQ,CAAtB;AAkBP,WAAsBC,OAAf,GAAAC,YAAA,UAAAD,QAAA;EAAAE,eAAA,OAAAF,OAAA;AAAA;AAoBP,IAAIG,aAAa,GAAG,CAApB;AACA,WAAsBC,WAAf,aAAAC,QAAA;EAAAC,SAAA,CAAAF,WAAA,EAAAC,QAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,WAAA;EAaL,SAAAA,YAAA,EAAc;IAAA,IAAAK,KAAA;IAAAP,eAAA,OAAAE,WAAA;IACZK,KAAA,GAAAF,MAAA,CAAAG,IAAA;IADYC,eAAA,CAAAC,sBAAA,CAAAH,KAAA,gBAVM,CAAC,CAUP;IAAAE,eAAA,CAAAC,sBAAA,CAAAH,KAAA,iBATM,CAAC,CASP;IAAAE,eAAA,CAAAC,sBAAA,CAAAH,KAAA,kBARO,EAQP;IAAAE,eAAA,CAAAC,sBAAA,CAAAH,KAAA,aAPqB,EAOrB;IAAAE,eAAA,CAAAC,sBAAA,CAAAH,KAAA,eANqC;MACjDI,SAAS,EAAE,CAAC,CADqC;MAEjDC,UAAU,EAAE,CAAC,CAFoC;MAGjDC,SAAS,EAAE;IAHsC,CAMrC;IAQZN,KAAA,CAAKI,SAAL,GAAiBV,aAAa,EAA9B;IACAM,KAAA,CAAKO,QAAL,CAAcH,SAAd,GAA0BJ,KAAA,CAAKI,SAA/B;IAAA,OAAAJ,KAAA;EACD;EAAAR,YAAA,CAAAG,WAAA;IAAAa,GAAA;IAAAC,KAAA,EAEO,SAAAC,cACNF,GADmB,EAEnBG,OAFmB,EAGnB;MACA,IAAMF,KAAK,GAAG,KAAKG,MAAL,CAAYJ,GAAZ,CAAd;MACA,KAAKI,MAAL,CAAYJ,GAAZ,IAAmBC,KAAK,GACpBI,KAAK,GAAeC,MAApB,CAA2BL,KAA3B,EAAkCE,OAAlC,CADoB,GAEpB,CAACA,OAAD,CAFJ;IAGD;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAM,QAAQC,GAAD,EAAuD;MAC5D,KAAKJ,MAAL,CAAYI,GAAZ,GAAkBA,GAAlB;MACA,OAAO,IAAP;IACD;EApCe;IAAAR,GAAA;IAAAC,KAAA,EAuCN,SAAAH,UAAUW,QAAD,EAAqB;MAEtC,OAAOA,QAAQ,CAACC,aAAT,KAA2BC,SAAlC;IACD;EAAA;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAW,QAAQH,QAAD,EAAoE;MACzE,KAAKV,QAAL,CAAca,OAAd,GAAwBH,QAAxB;MACA,KAAKV,QAAL,CAAcD,SAAd,CAAwB3B,aAAa,CAACE,KAAtC,IAA+C,KAAKyB,SAAL,CAAeW,QAAf,CAA/C;MACA,OAAO,IAAP;IACD;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAY,QAAQJ,QAAD,EAAoE;MACzE,KAAKV,QAAL,CAAcc,OAAd,GAAwBJ,QAAxB;MACA,KAAKV,QAAL,CAAcD,SAAd,CAAwB3B,aAAa,CAACG,KAAtC,IAA+C,KAAKwB,SAAL,CAAeW,QAAf,CAA/C;MACA,OAAO,IAAP;IACD;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAa,MACEL,QADG,EAKH;MACA,KAAKV,QAAL,CAAce,KAAd,GAAsBL,QAAtB;MAEA,KAAKV,QAAL,CAAcD,SAAd,CAAwB3B,aAAa,CAACM,GAAtC,IAA6C,KAAKqB,SAAL,CAAeW,QAAf,CAA7C;MACA,OAAO,IAAP;IACD;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAc,WACEN,QADQ,EAKR;MACA,KAAKV,QAAL,CAAcgB,UAAd,GAA2BN,QAA3B;MAEA,KAAKV,QAAL,CAAcD,SAAd,CAAwB3B,aAAa,CAACO,QAAtC,IAAkD,KAAKoB,SAAL,CAAeW,QAAf,CAAlD;MACA,OAAO,IAAP;IACD;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAe,cAAcP,QAAD,EAAkC;MAC7C,KAAKL,MAAL,CAAYa,gBAAZ,GAA+B,IAA/B;MACA,KAAKlB,QAAL,CAAciB,aAAd,GAA8BP,QAA9B;MACA,KAAKV,QAAL,CAAcD,SAAd,CAAwB3B,aAAa,CAACQ,YAAtC,IACE,KAAKmB,SAAL,CAAeW,QAAf,CADF;MAGA,OAAO,IAAP;IACD;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAiB,cAAcT,QAAD,EAAkC;MAC7C,KAAKL,MAAL,CAAYa,gBAAZ,GAA+B,IAA/B;MACA,KAAKlB,QAAL,CAAcmB,aAAd,GAA8BT,QAA9B;MACA,KAAKV,QAAL,CAAcD,SAAd,CAAwB3B,aAAa,CAACS,YAAtC,IACE,KAAKkB,SAAL,CAAeW,QAAf,CADF;MAGA,OAAO,IAAP;IACD;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAkB,YAAYV,QAAD,EAAkC;MAC3C,KAAKL,MAAL,CAAYa,gBAAZ,GAA+B,IAA/B;MACA,KAAKlB,QAAL,CAAcoB,WAAd,GAA4BV,QAA5B;MACA,KAAKV,QAAL,CAAcD,SAAd,CAAwB3B,aAAa,CAACU,UAAtC,IACE,KAAKiB,SAAL,CAAeW,QAAf,CADF;MAGA,OAAO,IAAP;IACD;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAmB,mBAAmBX,QAAD,EAAkC;MAClD,KAAKL,MAAL,CAAYa,gBAAZ,GAA+B,IAA/B;MACA,KAAKlB,QAAL,CAAcqB,kBAAd,GAAmCX,QAAnC;MACA,KAAKV,QAAL,CAAcD,SAAd,CAAwB3B,aAAa,CAACW,iBAAtC,IACE,KAAKgB,SAAL,CAAeW,QAAf,CADF;MAGA,OAAO,IAAP;IACD;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAoB,QAAQA,QAAD,EAAmB;MACxB,KAAKjB,MAAL,CAAYiB,OAAZ,GAAsBA,QAAtB;MACA,OAAO,IAAP;IACD;EAAA;IAAArB,GAAA;IAAAC,KAAA,EAED,SAAAqB,wBAAwBrB,KAAD,EAAiB;MACtC,KAAKG,MAAL,CAAYkB,uBAAZ,GAAsCrB,KAAtC;MACA,OAAO,IAAP;IACD;EAAA;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAsB,QAAQA,QAAD,EAAmB;MACxB,KAAKnB,MAAL,CAAYmB,OAAZ,GAAsBA,QAAtB;MACA,OAAO,IAAP;IACD;EAAA;IAAAvB,GAAA;IAAAC,KAAA,EAED,SAAAuB,QAAQA,QAAD,EAAmB;MACxB,KAAKpB,MAAL,CAAYoB,OAAZ,GAAsBA,QAAtB;MACA,OAAO,IAAP;IACD;EAAA;IAAAxB,GAAA;IAAAC,KAAA,EAED,SAAAwB,gCAAA,EAA4E;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAzCC,QAAJ,OAAAxB,KAAA,CAAAqB,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;QAAID,QAAJ,CAAAC,IAAA,IAAAH,SAAA,CAAAG,IAAA;MAAA;MAC7B,KAAK,IAAM3B,OAAX,IAAsB0B,QAAtB,EAAgC;QAC9B,KAAK3B,aAAL,CAAmB,kBAAnB,EAAuCC,OAAvC;MACD;MACD,OAAO,IAAP;IACD;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAA8B,6BAAA,EAAyE;MAAA,SAAAC,KAAA,GAAAL,SAAA,CAAAC,MAAA,EAAzCC,QAAJ,OAAAxB,KAAA,CAAA2B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAIJ,QAAJ,CAAAI,KAAA,IAAAN,SAAA,CAAAM,KAAA;MAAA;MAC1B,KAAK,IAAM9B,OAAX,IAAsB0B,QAAtB,EAAgC;QAC9B,KAAK3B,aAAL,CAAmB,eAAnB,EAAoCC,OAApC;MACD;MACD,OAAO,IAAP;IACD;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAiC,WAAWC,EAAD,EAAa;MACrB,KAAK/B,MAAL,CAAYgC,MAAZ,GAAqBD,EAArB;MACA,OAAO,IAAP;IACD;EAAA;IAAAnC,GAAA;IAAAC,KAAA,EAED,SAAAoC,qBAAqBpC,KAAD,EAAiB;MACnC,KAAKG,MAAL,CAAYiC,oBAAZ,GAAmCpC,KAAnC;MACA,OAAO,IAAP;IACD;EAAA;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAqC,WAAA,EAAa;MACX,KAAKzC,UAAL,GAAkB5B,iBAAiB,EAAnC;MAEA,KAAK8B,QAAL,GAAAwC,aAAA,CAAAA,aAAA,KAAqB,KAAKxC,QAAV;QAAoBF,UAAU,EAAE,KAAKA;MAAA,EAArD;MAEA,IAAI,KAAKO,MAAL,CAAYI,GAAhB,EAAqB;QACnB,KAAKJ,MAAL,CAAYI,GAAZ,CAAgBgC,OAAhB,GAA0B,IAA1B;MACD;IACF;EAAA;IAAAxC,GAAA;IAAAC,KAAA,EAED,SAAAwC,eAAA,EAAgC;MAC9B,OAAO,CAAC,IAAD,CAAP;IACD;EA5Ke;IAAAzC,GAAA;IAAAC,KAAA,EA+KhB,SAAAyC,QAAA,EAAU,CAAE;EAAA;IAAA1C,GAAA;IAAA2C,GAAA,EAEW,SAAAA,IAAA,EAAY;MAIjC,OACE,KAAKvC,MAAL,CAAYoB,OAAZ,KAAwB,IAAxB,IACA,CAAC,KAAKzB,QAAL,CAAcD,SAAd,CAAwB8C,QAAxB,CAAiC,KAAjC,CADD,IAEA,CAAC1E,wBAAwB,EAH3B;IAKD;EAAA;EAAA,OAAAiB,WAAA;AAAA,EA1LOJ,OAFH;AA+LP,WAAsB8D,oBAAf,aAAAC,YAAA;EAAAzD,SAAA,CAAAwD,oBAAA,EAAAC,YAAA;EAAA,IAAAC,OAAA,GAAAxD,YAAA,CAAAsD,oBAAA;EAAA,SAAAA,qBAAA;IAAA5D,eAAA,OAAA4D,oBAAA;IAAA,OAAAE,OAAA,CAAAC,KAAA,OAAArB,SAAA;EAAA;EAAA3C,YAAA,CAAA6D,oBAAA;IAAA7C,GAAA;IAAAC,KAAA,EAIL,SAAAgD,SAASxC,QAAD,EAA+D;MACrE,KAAKV,QAAL,CAAckD,QAAd,GAAyBxC,QAAzB;MACA,KAAKV,QAAL,CAAcD,SAAd,CAAwB3B,aAAa,CAACI,MAAtC,IAAgD,KAAKuB,SAAL,CAAeW,QAAf,CAAhD;MACA,OAAO,IAAP;IACD;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAiD,SACEzC,QADM,EAIN;MACA,KAAKV,QAAL,CAAcmD,QAAd,GAAyBzC,QAAzB;MACA,KAAKV,QAAL,CAAcD,SAAd,CAAwB3B,aAAa,CAACK,MAAtC,IAAgD,KAAKsB,SAAL,CAAeW,QAAf,CAAhD;MACA,OAAO,IAAP;IACD;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAED,SAAAkD,iBAAiBA,iBAAD,EAA4B;MAC1C,KAAK/C,MAAL,CAAY+C,gBAAZ,GAA+BA,iBAA/B;MACA,OAAO,IAAP;IACD;EAAA;EAAA,OAAAN,oBAAA;AAAA,EApBO1D,WAHH"},"metadata":{},"sourceType":"module","externalDependencies":[]}