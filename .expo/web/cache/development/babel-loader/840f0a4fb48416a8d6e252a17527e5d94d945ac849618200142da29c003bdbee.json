{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar AnimatedTransform = function (_AnimatedWithChildren) {\n  _inherits(AnimatedTransform, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedTransform);\n  function AnimatedTransform(transforms) {\n    var _this;\n    _classCallCheck(this, AnimatedTransform);\n    _this = _super.call(this);\n    _this._transforms = transforms;\n    return _this;\n  }\n  _createClass(AnimatedTransform, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__makeNative();\n          }\n        }\n      });\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__makeNative\", this).call(this);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._transforms.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            result[key] = value.__getValue();\n          } else {\n            result[key] = value;\n          }\n        }\n        return result;\n      });\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      return this._transforms.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            result[key] = value.__getAnimatedValue();\n          } else {\n            result[key] = value;\n          }\n        }\n        return result;\n      });\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      var _this2 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__addChild(_this2);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var _this3 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__removeChild(_this3);\n          }\n        }\n      });\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var transConfigs = [];\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            transConfigs.push({\n              type: 'animated',\n              property: key,\n              nodeTag: value.__getNativeTag()\n            });\n          } else {\n            transConfigs.push({\n              type: 'static',\n              property: key,\n              value: NativeAnimatedHelper.transformDataType(value)\n            });\n          }\n        }\n      });\n      NativeAnimatedHelper.validateTransform(transConfigs);\n      return {\n        type: 'transform',\n        transforms: transConfigs\n      };\n    }\n  }]);\n  return AnimatedTransform;\n}(AnimatedWithChildren);\nexport default AnimatedTransform;","map":{"version":3,"names":["_classCallCheck","_createClass","_get","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","AnimatedNode","AnimatedWithChildren","NativeAnimatedHelper","AnimatedTransform","_AnimatedWithChildren","_super","transforms","_this","_transforms","key","value","__makeNative","forEach","transform","__getValue","map","__getAnimatedValue","__attach","_this2","__addChild","__detach","_this3","__removeChild","__getNativeConfig","transConfigs","push","type","property","nodeTag","__getNativeTag","transformDataType","validateTransform"],"sources":["C:/alt/projects/school/3035/QueryLake/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nclass AnimatedTransform extends AnimatedWithChildren {\n  constructor(transforms) {\n    super();\n    this._transforms = transforms;\n  }\n  __makeNative() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n    });\n    super.__makeNative();\n  }\n  __getValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n  __getAnimatedValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getAnimatedValue();\n        } else {\n          // All transform components needed to recompose matrix\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n  __attach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n  __detach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n  __getNativeConfig() {\n    var transConfigs = [];\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag()\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value)\n          });\n        }\n      }\n    });\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs\n    };\n  }\n}\nexport default AnimatedTransform;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}