{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport Sensor from \"./Sensor\";\nexport var SensorContainer = function () {\n  function SensorContainer() {\n    _classCallCheck(this, SensorContainer);\n    _defineProperty(this, \"nativeSensors\", new Map());\n  }\n  _createClass(SensorContainer, [{\n    key: \"getSensorId\",\n    value: function getSensorId(sensorType, config) {\n      return sensorType * 100 + config.iosReferenceFrame * 10 + Number(config.adjustToInterfaceOrientation);\n    }\n  }, {\n    key: \"initializeSensor\",\n    value: function initializeSensor(sensorType, config) {\n      var sensorId = this.getSensorId(sensorType, config);\n      if (!this.nativeSensors.has(sensorId)) {\n        var newSensor = new Sensor(sensorType, config);\n        this.nativeSensors.set(sensorId, newSensor);\n      }\n      var sensor = this.nativeSensors.get(sensorId);\n      return sensor.getSharedValue();\n    }\n  }, {\n    key: \"registerSensor\",\n    value: function registerSensor(sensorType, config, handler) {\n      var sensorId = this.getSensorId(sensorType, config);\n      if (!this.nativeSensors.has(sensorId)) {\n        return -1;\n      }\n      var sensor = this.nativeSensors.get(sensorId);\n      if (sensor && sensor.isAvailable() && (sensor.isRunning() || sensor.register(handler))) {\n        sensor.listenersNumber++;\n        return sensorId;\n      }\n      return -1;\n    }\n  }, {\n    key: \"unregisterSensor\",\n    value: function unregisterSensor(sensorId) {\n      if (this.nativeSensors.has(sensorId)) {\n        var sensor = this.nativeSensors.get(sensorId);\n        if (sensor && sensor.isRunning()) {\n          sensor.listenersNumber--;\n          if (sensor.listenersNumber === 0) {\n            sensor.unregister();\n          }\n        }\n      }\n    }\n  }]);\n  return SensorContainer;\n}();","map":{"version":3,"names":["Sensor","SensorContainer","_classCallCheck","_defineProperty","Map","_createClass","key","value","getSensorId","sensorType","config","iosReferenceFrame","Number","adjustToInterfaceOrientation","initializeSensor","sensorId","nativeSensors","has","newSensor","set","sensor","get","getSharedValue","registerSensor","handler","isAvailable","isRunning","register","listenersNumber","unregisterSensor","unregister"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\SensorContainer.ts"],"sourcesContent":["import {\n  SensorType,\n  SensorConfig,\n  Value3D,\n  ValueRotation,\n  ShareableRef,\n  SharedValue,\n} from './commonTypes';\nimport Sensor from './Sensor';\n\nexport class SensorContainer {\n  private nativeSensors: Map<number, Sensor<any>> = new Map();\n\n  getSensorId(sensorType: SensorType, config: SensorConfig) {\n    return (\n      sensorType * 100 +\n      config.iosReferenceFrame * 10 +\n      Number(config.adjustToInterfaceOrientation)\n    );\n  }\n\n  initializeSensor(\n    sensorType: SensorType,\n    config: SensorConfig\n  ): SharedValue<Value3D | ValueRotation> {\n    const sensorId = this.getSensorId(sensorType, config);\n\n    if (!this.nativeSensors.has(sensorId)) {\n      const newSensor = new Sensor(sensorType, config);\n      this.nativeSensors.set(sensorId, newSensor);\n    }\n\n    const sensor = this.nativeSensors.get(sensorId);\n    return sensor!.getSharedValue();\n  }\n\n  registerSensor<T>(\n    sensorType: SensorType,\n    config: SensorConfig,\n    handler: ShareableRef<T> | ((data: Value3D | ValueRotation) => void)\n  ): number {\n    const sensorId = this.getSensorId(sensorType, config);\n\n    if (!this.nativeSensors.has(sensorId)) {\n      return -1;\n    }\n\n    const sensor = this.nativeSensors.get(sensorId);\n    if (\n      sensor &&\n      sensor.isAvailable() &&\n      (sensor.isRunning() || sensor.register(handler))\n    ) {\n      sensor.listenersNumber++;\n      return sensorId;\n    }\n    return -1;\n  }\n\n  unregisterSensor(sensorId: number) {\n    if (this.nativeSensors.has(sensorId)) {\n      const sensor = this.nativeSensors.get(sensorId);\n      if (sensor && sensor.isRunning()) {\n        sensor.listenersNumber--;\n        if (sensor.listenersNumber === 0) {\n          sensor.unregister();\n        }\n      }\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,OAAOA,MAAM;AAEb,WAAaC,eAAe;EAAC,SAAAA,gBAAA;IAAAC,eAAA,OAAAD,eAAA;IAAAE,eAAA,wBACuB,IAAIC,GAAG,EAAE;EAAA;EAAAC,YAAA,CAAAJ,eAAA;IAAAK,GAAA;IAAAC,KAAA,EAE3D,SAAAC,YAAYC,UAAsB,EAAEC,MAAoB,EAAE;MACxD,OACED,UAAU,GAAG,GAAG,GAChBC,MAAM,CAACC,iBAAiB,GAAG,EAAE,GAC7BC,MAAM,CAACF,MAAM,CAACG,4BAA4B,CAAC;IAE/C;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAEA,SAAAO,iBACEL,UAAsB,EACtBC,MAAoB,EACkB;MACtC,IAAMK,QAAQ,GAAG,IAAI,CAACP,WAAW,CAACC,UAAU,EAAEC,MAAM,CAAC;MAErD,IAAI,CAAC,IAAI,CAACM,aAAa,CAACC,GAAG,CAACF,QAAQ,CAAC,EAAE;QACrC,IAAMG,SAAS,GAAG,IAAIlB,MAAM,CAACS,UAAU,EAAEC,MAAM,CAAC;QAChD,IAAI,CAACM,aAAa,CAACG,GAAG,CAACJ,QAAQ,EAAEG,SAAS,CAAC;MAC7C;MAEA,IAAME,MAAM,GAAG,IAAI,CAACJ,aAAa,CAACK,GAAG,CAACN,QAAQ,CAAC;MAC/C,OAAOK,MAAM,CAAEE,cAAc,EAAE;IACjC;EAAA;IAAAhB,GAAA;IAAAC,KAAA,EAEA,SAAAgB,eACEd,UAAsB,EACtBC,MAAoB,EACpBc,OAAoE,EAC5D;MACR,IAAMT,QAAQ,GAAG,IAAI,CAACP,WAAW,CAACC,UAAU,EAAEC,MAAM,CAAC;MAErD,IAAI,CAAC,IAAI,CAACM,aAAa,CAACC,GAAG,CAACF,QAAQ,CAAC,EAAE;QACrC,OAAO,CAAC,CAAC;MACX;MAEA,IAAMK,MAAM,GAAG,IAAI,CAACJ,aAAa,CAACK,GAAG,CAACN,QAAQ,CAAC;MAC/C,IACEK,MAAM,IACNA,MAAM,CAACK,WAAW,EAAE,KACnBL,MAAM,CAACM,SAAS,EAAE,IAAIN,MAAM,CAACO,QAAQ,CAACH,OAAO,CAAC,CAAC,EAChD;QACAJ,MAAM,CAACQ,eAAe,EAAE;QACxB,OAAOb,QAAQ;MACjB;MACA,OAAO,CAAC,CAAC;IACX;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAEA,SAAAsB,iBAAiBd,QAAgB,EAAE;MACjC,IAAI,IAAI,CAACC,aAAa,CAACC,GAAG,CAACF,QAAQ,CAAC,EAAE;QACpC,IAAMK,MAAM,GAAG,IAAI,CAACJ,aAAa,CAACK,GAAG,CAACN,QAAQ,CAAC;QAC/C,IAAIK,MAAM,IAAIA,MAAM,CAACM,SAAS,EAAE,EAAE;UAChCN,MAAM,CAACQ,eAAe,EAAE;UACxB,IAAIR,MAAM,CAACQ,eAAe,KAAK,CAAC,EAAE;YAChCR,MAAM,CAACU,UAAU,EAAE;UACrB;QACF;MACF;IACF;EAAA;EAAA,OAAA7B,eAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}