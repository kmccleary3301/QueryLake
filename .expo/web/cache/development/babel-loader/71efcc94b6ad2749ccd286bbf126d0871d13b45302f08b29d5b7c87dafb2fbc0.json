{"ast":null,"code":"import { addWhitelistedNativeProps } from \"../ConfigHelper\";\nexport function createAnimatedPropAdapter(adapter, nativeProps) {\n  var nativePropsToAdd = {};\n  nativeProps === null || nativeProps === void 0 ? void 0 : nativeProps.forEach(function (prop) {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}\nvar _worklet_7706743909110_init_data = {\n  code: \"function anonymous(props) {\\n  const keys = Object.keys(props);\\n  if (keys.includes('transform')) {\\n    if (Array.isArray(props.transform)) {\\n      var _props$x, _props$y;\\n      if (props.transform.length !== 6) {\\n        throw new Error(\\\"invalid transform length of \\\" + props.transform.length + \\\", should be 6\\\");\\n      }\\n      const transform = props.transform;\\n      const x = (_props$x = props.x) !== null && _props$x !== void 0 ? _props$x : 0;\\n      const y = (_props$y = props.y) !== null && _props$y !== void 0 ? _props$y : 0;\\n      props.transform = [{\\n        translateX: transform[0] * x + transform[2] * y + transform[4]\\n      }, {\\n        translateY: transform[1] * x + transform[3] * y + transform[5]\\n      }];\\n    } else if (typeof props.transform === 'string') {\\n      const transform = props.transform;\\n      const arr = transform.replace('translate(', '').replace(')', '').split(' ');\\n      props.transform = [{\\n        translateX: parseFloat(arr[0])\\n      }, {\\n        translateY: parseFloat(arr[1])\\n      }];\\n    }\\n  }\\n}\",\n  location: \"C:\\\\alt\\\\projects\\\\school\\\\3035\\\\QueryLake\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\PropAdapters.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"props\\\",\\\"keys\\\",\\\"Object\\\",\\\"includes\\\",\\\"Array\\\",\\\"isArray\\\",\\\"transform\\\",\\\"_props$x\\\",\\\"_props$y\\\",\\\"length\\\",\\\"Error\\\",\\\"x\\\",\\\"y\\\",\\\"translateX\\\",\\\"translateY\\\",\\\"arr\\\",\\\"replace\\\",\\\"split\\\",\\\"parseFloat\\\"],\\\"sources\\\":[\\\"C:/alt/projects/school/3035/QueryLake/node_modules/react-native-reanimated/lib/module/reanimated2/PropAdapters.js\\\"],\\\"mappings\\\":\\\"AAaoD,SAAAA,SAASA,CAAAC,KAAA;EAG3D,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACD,KAAK,CAAC;EAE/B,IAAIC,IAAI,CAACE,QAAQ,CAAC,WAAW,CAAC,EAAE;IAC9B,IAAIC,KAAK,CAACC,OAAO,CAACL,KAAK,CAACM,SAAS,CAAC,EAAE;MAAA,IAAAC,QAAA,EAAAC,QAAA;MAElC,IAAIR,KAAK,CAACM,SAAS,CAACG,MAAM,KAAK,CAAC,EAAE;QAChC,MAAM,IAAIC,KAAK,kCAAgCV,KAAK,CAACM,SAAS,CAACG,MAAO,kBAAc,CAAC;MACvF;MACA,MAAMH,SAAS,GAAGN,KAAK,CAACM,SAAS;MACjC,MAAMK,CAAC,IAAAJ,QAAA,GAAGP,KAAK,CAACW,CAAC,cAAAJ,QAAA,cAAAA,QAAA,GAAI,CAAC;MACtB,MAAMK,CAAC,IAAAJ,QAAA,GAAGR,KAAK,CAACY,CAAC,cAAAJ,QAAA,cAAAA,QAAA,GAAI,CAAC;MACtBR,KAAK,CAACM,SAAS,GAAG,CAAC;QACjBO,UAAU,EAAEP,SAAS,CAAC,CAAC,CAAC,GAAGK,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,GAAGM,CAAC,GAAGN,SAAS,CAAC,CAAC;MAC/D,CAAC,EAAE;QACDQ,UAAU,EAAER,SAAS,CAAC,CAAC,CAAC,GAAGK,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,GAAGM,CAAC,GAAGN,SAAS,CAAC,CAAC;MAC/D,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,OAAON,KAAK,CAACM,SAAS,KAAK,QAAQ,EAAE;MAG9C,MAAMA,SAAS,GAAGN,KAAK,CAACM,SAAS;MACjC,MAAMS,GAAG,GAAGT,SAAS,CAACU,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;MAC3EjB,KAAK,CAACM,SAAS,GAAG,CAAC;QACjBO,UAAU,EAAEK,UAAU,CAACH,GAAG,CAAC,CAAC,CAAC;MAC/B,CAAC,EAAE;QACDD,UAAU,EAAEI,UAAU,CAACH,GAAG,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC;IACJ;EACF;AAEF\\\"}\"\n};\nexport var SVGAdapter = createAnimatedPropAdapter(function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(props) {\n    var keys = Object.keys(props);\n    if (keys.includes('transform')) {\n      if (Array.isArray(props.transform)) {\n        var _props$x, _props$y;\n        if (props.transform.length !== 6) {\n          throw new Error(`invalid transform length of ${props.transform.length}, should be 6`);\n        }\n        var transform = props.transform;\n        var x = (_props$x = props.x) != null ? _props$x : 0;\n        var y = (_props$y = props.y) != null ? _props$y : 0;\n        props.transform = [{\n          translateX: transform[0] * x + transform[2] * y + transform[4]\n        }, {\n          translateY: transform[1] * x + transform[3] * y + transform[5]\n        }];\n      } else if (typeof props.transform === 'string') {\n        var _transform = props.transform;\n        var arr = _transform.replace('translate(', '').replace(')', '').split(' ');\n        props.transform = [{\n          translateX: parseFloat(arr[0])\n        }, {\n          translateY: parseFloat(arr[1])\n        }];\n      }\n    }\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_7706743909110_init_data;\n  _f.__workletHash = 7706743909110;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}());\nvar _worklet_14826336588118_init_data = {\n  code: \"function anonymous(props) {\\n  const keys = Object.keys(props);\\n  if (keys.includes('value')) {\\n    props.text = props.value;\\n    delete props.value;\\n  }\\n}\",\n  location: \"C:\\\\alt\\\\projects\\\\school\\\\3035\\\\QueryLake\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\reanimated2\\\\PropAdapters.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"props\\\",\\\"keys\\\",\\\"Object\\\",\\\"includes\\\",\\\"text\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/alt/projects/school/3035/QueryLake/node_modules/react-native-reanimated/lib/module/reanimated2/PropAdapters.js\\\"],\\\"mappings\\\":\\\"AA+C0D,SAAAA,SAASA,CAAAC,KAAA;EAGjE,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACD,KAAK,CAAC;EAE/B,IAAIC,IAAI,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC1BH,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACK,KAAK;IACxB,OAAOL,KAAK,CAACK,KAAK;EACpB;AACF\\\"}\"\n};\nexport var TextInputAdapter = createAnimatedPropAdapter(function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(props) {\n    var keys = Object.keys(props);\n    if (keys.includes('value')) {\n      props.text = props.value;\n      delete props.value;\n    }\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_14826336588118_init_data;\n  _f.__workletHash = 14826336588118;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}(), ['text']);","map":{"version":3,"names":["addWhitelistedNativeProps","createAnimatedPropAdapter","adapter","nativeProps","nativePropsToAdd","forEach","prop","_worklet_7706743909110_init_data","code","location","sourceMap","SVGAdapter","_e","global","Error","_f","props","keys","Object","includes","Array","isArray","transform","_props$x","_props$y","length","x","y","translateX","translateY","arr","replace","split","parseFloat","_closure","__initData","__workletHash","__stackDetails","__version","_worklet_14826336588118_init_data","TextInputAdapter","text","value"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\PropAdapters.ts"],"sourcesContent":["import { addWhitelistedNativeProps } from '../ConfigHelper';\nimport { AdapterWorkletFunction } from './commonTypes';\n\nexport function createAnimatedPropAdapter(\n  adapter: AdapterWorkletFunction,\n  nativeProps?: string[]\n): AdapterWorkletFunction {\n  const nativePropsToAdd: { [key: string]: boolean } = {};\n  // eslint-disable-next-line no-unused-expressions\n  nativeProps?.forEach((prop) => {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}\n\n// ADAPTERS\n\nexport const SVGAdapter: AdapterWorkletFunction = createAnimatedPropAdapter(\n  (props) => {\n    'worklet';\n    const keys = Object.keys(props);\n    // transform\n    if (keys.includes('transform')) {\n      if (Array.isArray(props.transform)) {\n        // case of array with 6 values => https://github.com/react-native-svg/react-native-svg/blob/b2e2c355204ff4b10973d3afce1495f7e4167ff7/src/elements/Shape.tsx#L200\n        if (props.transform.length !== 6) {\n          throw new Error(\n            `invalid transform length of ${props.transform.length}, should be 6`\n          );\n        }\n        const transform: number[] = props.transform as number[];\n        const x: number = (props.x as number) ?? 0;\n        const y: number = (props.y as number) ?? 0;\n        props.transform = [\n          { translateX: transform[0] * x + transform[2] * y + transform[4] },\n          { translateY: transform[1] * x + transform[3] * y + transform[5] },\n        ];\n      } else if (typeof props.transform === 'string') {\n        // case of string 'translate(translateX translateY)'\n        // todo: handle other cases of transform string like here https://github.com/react-native-svg/react-native-svg/blob/b2e2c355204ff4b10973d3afce1495f7e4167ff7/src/lib/extract/extractTransform.ts#L184\n        const transform: string = props.transform as string;\n        const arr = transform\n          .replace('translate(', '')\n          .replace(')', '')\n          .split(' ');\n        props.transform = [\n          { translateX: parseFloat(arr[0]) },\n          { translateY: parseFloat(arr[1]) },\n        ];\n      }\n    }\n    // todo: other props\n  }\n);\n\nexport const TextInputAdapter = createAnimatedPropAdapter(\n  (props) => {\n    'worklet';\n    const keys = Object.keys(props);\n    // convert text to value like RN does here: https://github.com/facebook/react-native/blob/f2c6279ca497b34d5a2bfbb6f2d33dc7a7bea02a/Libraries/Components/TextInput/TextInput.js#L878\n    if (keys.includes('value')) {\n      props.text = props.value;\n      delete props.value;\n    }\n  },\n  ['text']\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}