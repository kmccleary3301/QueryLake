{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nexport var GesturePropError = function (_Error) {\n  _inherits(GesturePropError, _Error);\n  var _super = _createSuper(GesturePropError);\n  function GesturePropError(name, value, expectedType) {\n    _classCallCheck(this, GesturePropError);\n    return _super.call(this, `Invalid property \\`${name}: ${value}\\` expected \\`${expectedType}\\``);\n  }\n  return _createClass(GesturePropError);\n}(_wrapNativeSuper(Error));","map":{"version":3,"names":["GesturePropError","_Error","_inherits","_super","_createSuper","name","value","expectedType","_classCallCheck","call","_createClass","_wrapNativeSuper","Error"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\Errors.ts"],"sourcesContent":["export class GesturePropError extends Error {\n  constructor(name: string, value: unknown, expectedType: string) {\n    super(\n      `Invalid property \\`${name}: ${value}\\` expected \\`${expectedType}\\``\n    );\n  }\n}\n"],"mappings":";;;;;;;;AAAA,WAAaA,gBAAN,aAAAC,MAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EACL,SAAAA,iBAAYK,IAAD,EAAeC,KAAf,EAA+BC,YAA/B,EAAqD;IAAAC,eAAA,OAAAR,gBAAA;IAAA,OAAAG,MAAA,CAAAM,IAAA,OAE3D,sBAAqBJ,IAAK,KAAIC,KAAM,iBAAgBC,YAAa,IADpE;EAGD;EAAA,OAAAG,YAAA,CAAAV,gBAAA;AAAA,EAAAW,gBAAA,CALmCC,KAA/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}