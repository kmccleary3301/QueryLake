{"ast":null,"code":"import { shouldBeUseWeb } from \"../PlatformChecker\";\nvar initializeGlobalsForWeb = function initializeGlobalsForWeb() {\n  if (shouldBeUseWeb()) {\n    global._measure = function () {\n      console.warn(\"[Reanimated] You can't use `measure` with Chrome Debugger or with web version\");\n      return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n        pageX: 0,\n        pageY: 0\n      };\n    };\n    global._scrollTo = function () {\n      console.warn(\"[Reanimated] You can't use `scrollTo` with Chrome Debugger or with web version\");\n    };\n    global._dispatchCommand = function () {\n      console.warn(\"[Reanimated] You can't use `scrollTo` or `dispatchCommand` methods with Chrome Debugger or with web version\");\n    };\n    global._setGestureState = function () {\n      console.warn(\"[Reanimated] You can't use `setGestureState` with Chrome Debugger or with web version\");\n    };\n  }\n  return true;\n};\nexport default initializeGlobalsForWeb();","map":{"version":3,"names":["shouldBeUseWeb","initializeGlobalsForWeb","global","_measure","console","warn","x","y","width","height","pageX","pageY","_scrollTo","_dispatchCommand","_setGestureState"],"sources":["C:\\alt\\projects\\school\\3035\\QueryLake\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\js-reanimated\\global.ts"],"sourcesContent":["// In order to keep bundle size down, we treat this file as a polyfill for Web.\n\nimport { shouldBeUseWeb } from '../PlatformChecker';\nconst initializeGlobalsForWeb = () => {\n  if (shouldBeUseWeb()) {\n    global._measure = () => {\n      console.warn(\n        \"[Reanimated] You can't use `measure` with Chrome Debugger or with web version\"\n      );\n      return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n        pageX: 0,\n        pageY: 0,\n      };\n    };\n    global._scrollTo = () => {\n      console.warn(\n        \"[Reanimated] You can't use `scrollTo` with Chrome Debugger or with web version\"\n      );\n    };\n    global._dispatchCommand = () => {\n      console.warn(\n        \"[Reanimated] You can't use `scrollTo` or `dispatchCommand` methods with Chrome Debugger or with web version\"\n      );\n    };\n    global._setGestureState = () => {\n      console.warn(\n        \"[Reanimated] You can't use `setGestureState` with Chrome Debugger or with web version\"\n      );\n    };\n  }\n  return true;\n};\n\n/*\n  If a file doesn't export anything, tree shaking doesn't pack\n  it into the JS bundle. In effect, the code inside of this file\n  will never execute. That is why we wrapped initialization code\n  into a function, and we call this one during creating\n  the module export object.\n*/\n\nexport default initializeGlobalsForWeb();\n"],"mappings":"AAEA,SAASA,cAAc;AACvB,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA,EAAS;EACpC,IAAID,cAAc,EAAE,EAAE;IACpBE,MAAM,CAACC,QAAQ,GAAG,YAAM;MACtBC,OAAO,CAACC,IAAI,CACV,+EAA+E,CAChF;MACD,OAAO;QACLC,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE,CAAC;QACJC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,CAAC;QACTC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE;MACT,CAAC;IACH,CAAC;IACDT,MAAM,CAACU,SAAS,GAAG,YAAM;MACvBR,OAAO,CAACC,IAAI,CACV,gFAAgF,CACjF;IACH,CAAC;IACDH,MAAM,CAACW,gBAAgB,GAAG,YAAM;MAC9BT,OAAO,CAACC,IAAI,CACV,6GAA6G,CAC9G;IACH,CAAC;IACDH,MAAM,CAACY,gBAAgB,GAAG,YAAM;MAC9BV,OAAO,CAACC,IAAI,CACV,uFAAuF,CACxF;IACH,CAAC;EACH;EACA,OAAO,IAAI;AACb,CAAC;AAUD,eAAeJ,uBAAuB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}